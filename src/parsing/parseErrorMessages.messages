toplevel: FORMAT LBRACE DECO ID LPAREN UID COLON ID COMMA INCLUDE
##
## Ends in an error in state: 355.
##
## separated_nonempty_list(COMMA,deco_arg) -> deco_arg COMMA . separated_nonempty_list(COMMA,deco_arg) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## deco_arg COMMA
##

Unterminated attribute specification: a key is expected after the ','.

toplevel: FORMAT LBRACE DECO ID LPAREN UID COLON ID EQ ID INCLUDE
##
## Ends in an error in state: 354.
##
## separated_nonempty_list(COMMA,deco_arg) -> deco_arg . [ RPAREN ]
## separated_nonempty_list(COMMA,deco_arg) -> deco_arg . COMMA separated_nonempty_list(COMMA,deco_arg) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## deco_arg
##

Unterminated keys in attribute specification: perhaps you forgot a ')'?

toplevel: FORMAT LBRACE DECO ID LPAREN UID COLON ID EQ INCLUDE
##
## Ends in an error in state: 352.
##
## deco_arg -> ident EQ . ident [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## ident EQ
##

Unterminated attribute key assignment: a key value is expected after a '='.

toplevel: FORMAT LBRACE DECO ID LPAREN UID COLON ID INCLUDE
##
## Ends in an error in state: 351.
##
## deco_arg -> ident . EQ ident [ RPAREN COMMA ]
## deco_arg -> ident . [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Unterminated keys in attribute specification: perhaps you forgot a ')'?

toplevel: FORMAT LBRACE DECO ID LPAREN UID COLON RPAREN INCLUDE
##
## Ends in an error in state: 357.
##
## separated_nonempty_list(SEMICOLON,deco_spec) -> deco_spec . [ RBRACK ]
## separated_nonempty_list(SEMICOLON,deco_spec) -> deco_spec . SEMICOLON separated_nonempty_list(SEMICOLON,deco_spec) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## deco_spec
##

Unterminated keys in attribute specification (omit the colon (:) to specify no keys).

toplevel: FORMAT LBRACE DECO ID LPAREN UID COLON INCLUDE
##
## Ends in an error in state: 347.
##
## deco_spec -> ident LPAREN def COLON . loption(separated_nonempty_list(COMMA,deco_arg)) RPAREN [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## ident LPAREN def COLON
##

Unterminated keys in attribute specification (omit the colon (:) to specify no keys).

toplevel: FORMAT LBRACE DECO ID LPAREN UID RPAREN INCLUDE
##
## Ends in an error in state: 345.
##
## deco_spec -> ident LPAREN def RPAREN . RBRACK [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## ident LPAREN def RPAREN
##

Unterminated attribute specification: perhaps you forgot a ']'?

toplevel: FORMAT LBRACE DECO ID LPAREN UID INCLUDE
##
## Ends in an error in state: 344.
##
## deco_spec -> ident LPAREN def . COLON loption(separated_nonempty_list(COMMA,deco_arg)) RPAREN [ SEMICOLON RBRACK ]
## deco_spec -> ident LPAREN def . RPAREN RBRACK [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## ident LPAREN def
##

Unterminated keys in attribute specification.

toplevel: FORMAT LBRACE DECO ID LPAREN INCLUDE
##
## Ends in an error in state: 343.
##
## deco_spec -> ident LPAREN . def COLON loption(separated_nonempty_list(COMMA,deco_arg)) RPAREN [ SEMICOLON RBRACK ]
## deco_spec -> ident LPAREN . def RPAREN RBRACK [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## ident LPAREN
##

Unterminated attribute specification: perhaps you forgot a ']'?

toplevel: FORMAT LBRACE DECO ID INCLUDE
##
## Ends in an error in state: 342.
##
## deco_spec -> ident . LPAREN def COLON loption(separated_nonempty_list(COMMA,deco_arg)) RPAREN [ SEMICOLON RBRACK ]
## deco_spec -> ident . LPAREN def RPAREN RBRACK [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## ident
##

Unspecified primary key in attribute specification.

toplevel: FORMAT LBRACE DECO INCLUDE
##
## Ends in an error in state: 338.
##
## deco_decl -> DECO . loption(separated_nonempty_list(SEMICOLON,deco_spec)) RBRACK [ UID ]
##
## The known suffix of the stack is as follows:
## DECO
##

An attribute name is expected in an attribute specification.

toplevel: FORMAT LBRACE UID COLONEQ AT_VIEW LITERAL COMMA UID UID
##
## Ends in an error in state: 549.
##
## rule_elem -> rule_elem . BAR rule_elem [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . STAR [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . CARET expr [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . POS [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . QUESTION [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> AT_VIEW expr COMMA rule_elem . RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_VIEW expr COMMA rule_elem
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 376, spurious reduction of production option(nt_args) ->
## In state 398, spurious reduction of production rule_elem -> UID option(nt_args)
##

A view-restricted parse can only be applied to a single rule element: perhaps you forgot a ']'?

toplevel: FORMAT LBRACE UID COLONEQ AT_VIEW LITERAL COMMA INCLUDE
##
## Ends in an error in state: 524.
##
## rule_elem -> AT_VIEW expr COMMA . rule_elem RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_VIEW expr COMMA
##

A view-restricted parse requires a rule element to follow the ',' after the position expression.

toplevel: FORMAT LBRACE UID COLONEQ AT_VIEW LITERAL INCLUDE
##
## Ends in an error in state: 523.
##
## expr -> expr . DOT ident [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## rule_elem -> AT_VIEW expr . COMMA rule_elem RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_VIEW expr
##

A view-restricted parse requires a ',' to follow the position expression.

toplevel: FORMAT LBRACE UID COLONEQ AT_VIEW INCLUDE
##
## Ends in an error in state: 522.
##
## rule_elem -> AT_VIEW . expr COMMA rule_elem RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_VIEW
##

A position expression is expected for the view-restricted parse.

toplevel: FORMAT LBRACE UID COLONEQ AT_MAP LITERAL COMMA UID UID
##
## Ends in an error in state: 535.
##
## rule_elem -> rule_elem . BAR rule_elem [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . STAR [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . CARET expr [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . POS [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . QUESTION [ STAR RBRACK QUESTION POS CARET BAR ]
## rule_elem -> AT_MAP expr COMMA rule_elem . RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_MAP expr COMMA rule_elem
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 376, spurious reduction of production option(nt_args) ->
## In state 398, spurious reduction of production rule_elem -> UID option(nt_args)
##

A view-restricted parse can only be applied to a single rule element: perhaps you forgot a ']'?

toplevel: FORMAT LBRACE UID COLONEQ AT_MAP LITERAL COMMA INCLUDE
##
## Ends in an error in state: 530.
##
## rule_elem -> AT_MAP expr COMMA . rule_elem RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_MAP expr COMMA
##

A rule-element is expected after the ',' for the view-restricted parse.

toplevel: FORMAT LBRACE UID COLONEQ AT_MAP LITERAL INCLUDE
##
## Ends in an error in state: 529.
##
## expr -> expr . DOT ident [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## rule_elem -> AT_MAP expr . COMMA rule_elem RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_MAP expr
##

Ill-formed view-map restricted parse: perhaps you forgot a ',' after the view expression?

toplevel: FORMAT LBRACE UID COLONEQ AT_MAP INCLUDE
##
## Ends in an error in state: 528.
##
## rule_elem -> AT_MAP . expr COMMA rule_elem RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_MAP
##

A position expression is expected for the view-restricted parse.

toplevel: FORMAT LBRACE UID COLONEQ AT_POS LITERAL COMMA UID UID
##
## Ends in an error in state: 547.
##
## rule_elem -> rule_elem . BAR rule_elem [ STAR RPAREN QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . STAR [ STAR RPAREN QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . CARET expr [ STAR RPAREN QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . POS [ STAR RPAREN QUESTION POS CARET BAR ]
## rule_elem -> rule_elem . QUESTION [ STAR RPAREN QUESTION POS CARET BAR ]
## rule_elem -> AT_POS expr COMMA rule_elem . RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_POS expr COMMA rule_elem
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 376, spurious reduction of production option(nt_args) ->
## In state 398, spurious reduction of production rule_elem -> UID option(nt_args)
##

Ill-formed positioned parse: perhaps you forgot a ']' after the parsing rule?

toplevel: FORMAT LBRACE UID COLONEQ AT_POS LITERAL COMMA INCLUDE
##
## Ends in an error in state: 527.
##
## rule_elem -> AT_POS expr COMMA . rule_elem RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_POS expr COMMA
##

A rule element is expected after the ',' in the positioned parse.

toplevel: FORMAT LBRACE UID COLONEQ AT_POS LITERAL INCLUDE
##
## Ends in an error in state: 526.
##
## expr -> expr . DOT ident [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## rule_elem -> AT_POS expr . COMMA rule_elem RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_POS expr
##

Ill-formed positioned parse: perhaps you forgot a ',' after the position expression?

toplevel: FORMAT LBRACE UID COLONEQ AT_POS INCLUDE
##
## Ends in an error in state: 525.
##
## rule_elem -> AT_POS . expr COMMA rule_elem RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## AT_POS
##

A position expression is expected for a positioned parse.

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM LITERAL BAR LITERAL INCLUDE
##
## Ends in an error in state: 413.
##
## separated_nonempty_list(BAR,LITERAL) -> LITERAL . [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
## separated_nonempty_list(BAR,LITERAL) -> LITERAL . BAR separated_nonempty_list(BAR,LITERAL) [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## LITERAL
##

Invalid separator in literal set: perhaps you forgot a '|'?

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM LITERAL BAR INCLUDE
##
## Ends in an error in state: 412.
##
## separated_nonempty_list(BAR,LITERAL) -> LITERAL BAR . separated_nonempty_list(BAR,LITERAL) [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## LITERAL BAR
##

Ill-formed literal in literal set.

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM LITERAL DOTDOT INCLUDE
##
## Ends in an error in state: 410.
##
## literal_set -> LITERAL DOTDOT . LITERAL [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## LITERAL DOTDOT
##

Ill-formed literal used to terminate literal range.

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM LITERAL INCLUDE
##
## Ends in an error in state: 409.
##
## literal_set -> LITERAL . DOTDOT LITERAL [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
## separated_nonempty_list(BAR,LITERAL) -> LITERAL . [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
## separated_nonempty_list(BAR,LITERAL) -> LITERAL . BAR separated_nonempty_list(BAR,LITERAL) [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## LITERAL
##

Ill-formed literal in literal set: perhaps you forgot a separator like '..', '|' or '\', or a terminator like ']'?

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM LPAREN INCLUDE
##
## Ends in an error in state: 408.
##
## literal_set -> LPAREN . literal_set RPAREN [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Ill-formed literal in literal set.

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM UID BACKSLASH INCLUDE
##
## Ends in an error in state: 418.
##
## literal_set -> literal_set BACKSLASH . literal_set [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## literal_set BACKSLASH
##

Ill-formed literal in literal set.

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM INCLUDE
##
## Ends in an error in state: 516.
##
## rule_elem -> EXCLAIM . list(literal_set) EXCLAIM [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## EXCLAIM
##

Ill-formed literal in literal set.

toplevel: FORMAT LBRACE UID COLONEQ ID EQ EPSILON INCLUDE
##
## Ends in an error in state: 546.
##
## rule_elem -> rule_elem . BAR rule_elem [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . STAR [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . CARET expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> ident EQ rule_elem . [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . POS [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . QUESTION [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## ident EQ rule_elem
##

Ill-formed rule element.

toplevel: FORMAT LBRACE UID COLONEQ ID EQ INCLUDE
##
## Ends in an error in state: 545.
##
## rule_elem -> ident EQ . rule_elem [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## ident EQ
##

Ill-formed rule element.

toplevel: FORMAT LBRACE UID COLONEQ ID INCLUDE
##
## Ends in an error in state: 544.
##
## rule_elem -> ident . EQ rule_elem [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed rule element.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE ID COLONEQ ID RPAREN
##
## Ends in an error in state: 486.
##
## separated_nonempty_list(SEMICOLON,stmt) -> stmt . [ SEMISEMI RBRACE ]
## separated_nonempty_list(SEMICOLON,stmt) -> stmt . SEMICOLON separated_nonempty_list(SEMICOLON,stmt) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## stmt
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
## In state 497, spurious reduction of production stmt -> assign_lhs_expr COLONEQ expr
##

Ill-formed rhs expression in action statement: perhaps you forgot a ';' or ';;' or a terminating '}'?

toplevel: FORMAT LBRACE UID COLONEQ LBRACE ID COLONEQ ID SEMICOLON INCLUDE
##
## Ends in an error in state: 487.
##
## separated_nonempty_list(SEMICOLON,stmt) -> stmt SEMICOLON . separated_nonempty_list(SEMICOLON,stmt) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## stmt SEMICOLON
##

Ill-formed lhs expression in action statement.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE ID COLONEQ LITERAL INCLUDE
##
## Ends in an error in state: 497.
##
## expr -> expr . DOT ident [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LAND expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LOR expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . AT expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . MUL expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . MOD expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . DIV expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LT expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . GT expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . EQ expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ SEMISEMI SEMICOLON RSHFT RPAREN RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## stmt -> assign_lhs_expr COLONEQ expr . [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## assign_lhs_expr COLONEQ expr
##

Ill-formed rhs expression in action statement: perhaps you forgot a ';' or ';;' or a terminating '}'?

toplevel: FORMAT LBRACE UID COLONEQ LBRACE ID COLONEQ INCLUDE
##
## Ends in an error in state: 496.
##
## stmt -> assign_lhs_expr COLONEQ . expr [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## assign_lhs_expr COLONEQ
##

Ill-formed rhs expression in action statement.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE ID DOT INCLUDE
##
## Ends in an error in state: 494.
##
## assign_lhs_expr -> assign_lhs_expr DOT . ident [ LBRACK DOT COLONEQ ]
##
## The known suffix of the stack is as follows:
## assign_lhs_expr DOT
##

Ill-formed record field or attribute in lhs expression in action statement.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE ID LBRACK LITERAL INCLUDE
##
## Ends in an error in state: 492.
##
## assign_lhs_expr -> assign_lhs_expr LBRACK expr . RBRACK [ LBRACK DOT COLONEQ ]
## expr -> expr . DOT ident [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
##
## The known suffix of the stack is as follows:
## assign_lhs_expr LBRACK expr
##

Ill-formed index expression in lhs expression in action statement.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE ID LBRACK INCLUDE
##
## Ends in an error in state: 491.
##
## assign_lhs_expr -> assign_lhs_expr LBRACK . expr RBRACK [ LBRACK DOT COLONEQ ]
##
## The known suffix of the stack is as follows:
## assign_lhs_expr LBRACK
##

Ill-formed lhs expression in action statement: expected an index expression after '['.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE ID INCLUDE
##
## Ends in an error in state: 490.
##
## assign_lhs_expr -> assign_lhs_expr . DOT ident [ LBRACK DOT COLONEQ ]
## assign_lhs_expr -> assign_lhs_expr . LBRACK expr RBRACK [ LBRACK DOT COLONEQ ]
## stmt -> assign_lhs_expr . COLONEQ expr [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## assign_lhs_expr
##

Ill-formed lhs expression in action statement: perhaps you forgot a '.', '[' or a ':='?

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LET UNDERSCORE EQ LITERAL IN LBRACE ID COLONEQ ID SEMISEMI
##
## Ends in an error in state: 499.
##
## stmt -> LET pattern EQ expr IN LBRACE loption(separated_nonempty_list(SEMICOLON,stmt)) . RBRACE [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LET pattern EQ expr IN LBRACE loption(separated_nonempty_list(SEMICOLON,stmt))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
## In state 497, spurious reduction of production stmt -> assign_lhs_expr COLONEQ expr
## In state 486, spurious reduction of production separated_nonempty_list(SEMICOLON,stmt) -> stmt
## In state 498, spurious reduction of production loption(separated_nonempty_list(SEMICOLON,stmt)) -> separated_nonempty_list(SEMICOLON,stmt)
##

Unterminated record expression: perhaps you forgot a '}'?

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LET UNDERSCORE EQ LITERAL IN LBRACE INCLUDE
##
## Ends in an error in state: 485.
##
## stmt -> LET pattern EQ expr IN LBRACE . loption(separated_nonempty_list(SEMICOLON,stmt)) RBRACE [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LET pattern EQ expr IN LBRACE
##

Ill-formed statement: expected a statement in statement block.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LET UNDERSCORE EQ LITERAL IN INCLUDE
##
## Ends in an error in state: 484.
##
## stmt -> LET pattern EQ expr IN . stmt [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
## stmt -> LET pattern EQ expr IN . LBRACE loption(separated_nonempty_list(SEMICOLON,stmt)) RBRACE [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LET pattern EQ expr IN
##

Ill-formed body for 'let' statement: expected a statement or a statement block.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LET UNDERSCORE EQ LITERAL INCLUDE
##
## Ends in an error in state: 483.
##
## expr -> expr . DOT ident [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## stmt -> LET pattern EQ expr . IN stmt [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
## stmt -> LET pattern EQ expr . IN LBRACE loption(separated_nonempty_list(SEMICOLON,stmt)) RBRACE [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LET pattern EQ expr
##

Ill-formed let statement: error in either the rhs of the binding, or there is a missing 'in' following the rhs of the binding.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LET UNDERSCORE EQ INCLUDE
##
## Ends in an error in state: 482.
##
## stmt -> LET pattern EQ . expr IN stmt [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
## stmt -> LET pattern EQ . expr IN LBRACE loption(separated_nonempty_list(SEMICOLON,stmt)) RBRACE [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LET pattern EQ
##

Ill-formed rhs of the binding in the let statement.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LET UNDERSCORE INCLUDE
##
## Ends in an error in state: 481.
##
## pattern -> pattern . COLONCOLON pattern [ EQ COLONCOLON ]
## stmt -> LET pattern . EQ expr IN stmt [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
## stmt -> LET pattern . EQ expr IN LBRACE loption(separated_nonempty_list(SEMICOLON,stmt)) RBRACE [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LET pattern
##

A let binding pattern is followed by '='.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LET INCLUDE
##
## Ends in an error in state: 480.
##
## stmt -> LET . pattern EQ expr IN stmt [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
## stmt -> LET . pattern EQ expr IN LBRACE loption(separated_nonempty_list(SEMICOLON,stmt)) RBRACE [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LET
##

Ill-formed let binding pattern.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE LITERAL OF BAR INCLUDE
##
## Ends in an error in state: 476.
##
## stmt -> LPAREN CASE expr OF option(BAR) . loption(separated_nonempty_list(BAR,branchstmt)) RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LPAREN CASE expr OF option(BAR)
##

Ill-formed branch pattern in case statement.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE LITERAL OF UNDERSCORE ARROW ID COLONEQ ID BAR INCLUDE
##
## Ends in an error in state: 509.
##
## separated_nonempty_list(BAR,branchstmt) -> branchstmt BAR . separated_nonempty_list(BAR,branchstmt) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## branchstmt BAR
##

Ill-formed branch pattern in case statement.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE LITERAL OF UNDERSCORE ARROW ID COLONEQ ID SEMISEMI
##
## Ends in an error in state: 508.
##
## separated_nonempty_list(BAR,branchstmt) -> branchstmt . [ RPAREN ]
## separated_nonempty_list(BAR,branchstmt) -> branchstmt . BAR separated_nonempty_list(BAR,branchstmt) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## branchstmt
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
## In state 497, spurious reduction of production stmt -> assign_lhs_expr COLONEQ expr
## In state 505, spurious reduction of production branchstmt -> pattern ARROW stmt
##

Unterminated 'case' expression: perhaps you forgot a ')' terminator?

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE LITERAL OF UNDERSCORE ARROW LBRACE ID COLONEQ ID SEMISEMI
##
## Ends in an error in state: 503.
##
## branchstmt -> pattern ARROW LBRACE separated_nonempty_list(SEMICOLON,stmt) . RBRACE [ RPAREN BAR ]
##
## The known suffix of the stack is as follows:
## pattern ARROW LBRACE separated_nonempty_list(SEMICOLON,stmt)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
## In state 497, spurious reduction of production stmt -> assign_lhs_expr COLONEQ expr
## In state 486, spurious reduction of production separated_nonempty_list(SEMICOLON,stmt) -> stmt
##

Unterminated branch statement block in case statement: perhaps you forgot a terminating '}'?

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE LITERAL OF UNDERSCORE ARROW LBRACE INCLUDE
##
## Ends in an error in state: 502.
##
## branchstmt -> pattern ARROW LBRACE . separated_nonempty_list(SEMICOLON,stmt) RBRACE [ RPAREN BAR ]
##
## The known suffix of the stack is as follows:
## pattern ARROW LBRACE
##

Ill-formed branch statement block: expected a statement after the '{'.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE LITERAL OF UNDERSCORE ARROW INCLUDE
##
## Ends in an error in state: 479.
##
## branchstmt -> pattern ARROW . stmt [ RPAREN BAR ]
## branchstmt -> pattern ARROW . LBRACE separated_nonempty_list(SEMICOLON,stmt) RBRACE [ RPAREN BAR ]
##
## The known suffix of the stack is as follows:
## pattern ARROW
##

Ill-formed branch in case statement: expected a statement or statement block after the '->'.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE LITERAL OF UNDERSCORE INCLUDE
##
## Ends in an error in state: 478.
##
## branchstmt -> pattern . ARROW stmt [ RPAREN BAR ]
## branchstmt -> pattern . ARROW LBRACE separated_nonempty_list(SEMICOLON,stmt) RBRACE [ RPAREN BAR ]
## pattern -> pattern . COLONCOLON pattern [ COLONCOLON ARROW ]
##
## The known suffix of the stack is as follows:
## pattern
##

Ill-formed branch in case statement: perhaps you forgot a '->'?

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE LITERAL OF INCLUDE
##
## Ends in an error in state: 475.
##
## stmt -> LPAREN CASE expr OF . option(BAR) loption(separated_nonempty_list(BAR,branchstmt)) RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LPAREN CASE expr OF
##

Ill-formed pattern in branch of case statement.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE LITERAL INCLUDE
##
## Ends in an error in state: 474.
##
## expr -> expr . DOT ident [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## stmt -> LPAREN CASE expr . OF option(BAR) loption(separated_nonempty_list(BAR,branchstmt)) RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LPAREN CASE expr
##

Ill-formed scrutinee expression in case statement: perhaps you forgot an 'of' after the scrutinee?

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN CASE INCLUDE
##
## Ends in an error in state: 473.
##
## stmt -> LPAREN CASE . expr OF option(BAR) loption(separated_nonempty_list(BAR,branchstmt)) RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LPAREN CASE
##

Ill-formed scrutinee expression in case statement.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE LPAREN INCLUDE
##
## Ends in an error in state: 472.
##
## stmt -> LPAREN . CASE expr OF option(BAR) loption(separated_nonempty_list(BAR,branchstmt)) RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Ill-formed statement: expected a 'case' to follow the '('.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE SEMISEMI LITERAL INCLUDE
##
## Ends in an error in state: 513.
##
## action -> loption(separated_nonempty_list(SEMICOLON,stmt)) SEMISEMI expr . [ RBRACE ]
## expr -> expr . DOT ident [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
##
## The known suffix of the stack is as follows:
## loption(separated_nonempty_list(SEMICOLON,stmt)) SEMISEMI expr
##

Ill-formed return expression in action: perhaps you forgot a '}'?

toplevel: FORMAT LBRACE UID COLONEQ LBRACE SEMISEMI INCLUDE
##
## Ends in an error in state: 512.
##
## action -> loption(separated_nonempty_list(SEMICOLON,stmt)) SEMISEMI . expr [ RBRACE ]
##
## The known suffix of the stack is as follows:
## loption(separated_nonempty_list(SEMICOLON,stmt)) SEMISEMI
##

Ill-formed return expression in action.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE INCLUDE
##
## Ends in an error in state: 463.
##
## rule_elem -> LBRACE . action RBRACE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

Ill-formed statement in action.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK CONSTR LPAREN INCLUDE
##
## Ends in an error in state: 142.
##
## expr -> CONSTR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## CONSTR LPAREN
##

Ill-formed argument expression for constructor.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK CONSTR INCLUDE
##
## Ends in an error in state: 141.
##
## expr -> CONSTR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## CONSTR
##

Ill-formed arguments to constructor: did you forget a '(' before the arguments, or a '()' to indicate no arguments?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK EXCLAIM LITERAL INCLUDE
##
## Ends in an error in state: 461.
##
## expr -> expr . DOT ident [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## rule_elem -> LBRACK expr . RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LBRACK expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 225, spurious reduction of production expr -> EXCLAIM expr
##

Ill-formed constraint expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK EXCLAIM INCLUDE
##
## Ends in an error in state: 140.
##
## expr -> EXCLAIM . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## EXCLAIM
##

Ill-formed expression: expected an argument for the '!' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LBRACE ID COLON ID COMMA INCLUDE
##
## Ends in an error in state: 232.
##
## separated_nonempty_list(COMMA,rec_exp_field) -> rec_exp_field COMMA . separated_nonempty_list(COMMA,rec_exp_field) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## rec_exp_field COMMA
##

Ill-formed record field: perhaps you forgot a '}' to terminate the record?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LBRACE ID COLON LITERAL INCLUDE
##
## Ends in an error in state: 236.
##
## expr -> expr . DOT ident [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## rec_exp_field -> ident COLON expr . [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON expr
##

Ill-formed record field: perhaps you forgot a '}' to terminate the record?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LBRACE ID COLON INCLUDE
##
## Ends in an error in state: 235.
##
## rec_exp_field -> ident COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON
##

Ill-formed value expression in record field: expected an expression after the ':'.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LBRACE ID INCLUDE
##
## Ends in an error in state: 234.
##
## rec_exp_field -> ident . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed record field expression: perhaps you forgot a ':' after the field name?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LBRACE INCLUDE
##
## Ends in an error in state: 133.
##
## expr -> LBRACE . rec_exp_fields RBRACE [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

Ill-formed record field.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LBRACK LITERAL SEMICOLON INCLUDE
##
## Ends in an error in state: 239.
##
## listelems -> expr SEMICOLON . listelems [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr SEMICOLON
##

Ill-formed expression for list element.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LBRACK LITERAL INCLUDE
##
## Ends in an error in state: 238.
##
## expr -> expr . DOT ident [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ SEMICOLON RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## listelems -> expr . SEMICOLON listelems [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## listelems -> expr . RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr
##

Ill-formed expression for list element.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LBRACK INCLUDE
##
## Ends in an error in state: 131.
##
## expr -> LBRACK . listelems [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

Ill-formed list expression: expected an expression for a list element.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET CONSTR INCLUDE
##
## Ends in an error in state: 115.
##
## pattern -> CONSTR . option(pattern_args) [ RPAREN EQ COMMA COLONCOLON ARROW ]
##
## The known suffix of the stack is as follows:
## CONSTR
##

Ill-formed constructor pattern argument.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET LPAREN UNDERSCORE COMMA INCLUDE
##
## Ends in an error in state: 121.
##
## separated_nonempty_list(COMMA,pattern) -> pattern COMMA . separated_nonempty_list(COMMA,pattern) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## pattern COMMA
##

Ill-formed pattern argument in tuple pattern.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET LPAREN UNDERSCORE INCLUDE
##
## Ends in an error in state: 120.
##
## pattern -> pattern . COLONCOLON pattern [ RPAREN COMMA COLONCOLON ]
## separated_nonempty_list(COMMA,pattern) -> pattern . [ RPAREN ]
## separated_nonempty_list(COMMA,pattern) -> pattern . COMMA separated_nonempty_list(COMMA,pattern) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## pattern
##

Ill-formed pattern argument in tuple pattern: perhaps you forgot a ',' or ')'?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET LPAREN INCLUDE
##
## Ends in an error in state: 111.
##
## pattern_args -> LPAREN . loption(separated_nonempty_list(COMMA,pattern)) RPAREN [ RPAREN EQ COMMA COLONCOLON ARROW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Ill-formed tuple pattern: expected a pattern argument.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET UNDERSCORE EQ LITERAL IN INCLUDE
##
## Ends in an error in state: 243.
##
## expr -> LET pattern EQ expr IN . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LET pattern EQ expr IN
##

Ill-formed expression body in let expression: expected an expression for the body.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET UNDERSCORE EQ LITERAL INCLUDE
##
## Ends in an error in state: 242.
##
## expr -> expr . DOT ident [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IN IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> LET pattern EQ expr . IN expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LET pattern EQ expr
##

Ill-formed let expression: error in either the rhs of the binding, or there is a missing 'in' following the rhs of the binding.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET UNDERSCORE EQ INCLUDE
##
## Ends in an error in state: 129.
##
## expr -> LET pattern EQ . expr IN expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LET pattern EQ
##

Ill-formed rhs of the binding in the let expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET UNDERSCORE INCLUDE
##
## Ends in an error in state: 128.
##
## expr -> LET pattern . EQ expr IN expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## pattern -> pattern . COLONCOLON pattern [ EQ COLONCOLON ]
##
## The known suffix of the stack is as follows:
## LET pattern
##

A let binding pattern is followed by '='.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET INCLUDE
##
## Ends in an error in state: 109.
##
## expr -> LET . pattern EQ expr IN expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LET
##

Ill-formed let binding pattern.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL AT INCLUDE
##
## Ends in an error in state: 198.
##
## expr -> expr AT . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr AT
##

Ill-formed expression for the first argument of the '@' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL COLONCOLON INCLUDE
##
## Ends in an error in state: 194.
##
## expr -> expr COLONCOLON . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr COLONCOLON
##

Ill-formed expression for the first argument of the '::' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL CONSTR_MATCH INCLUDE
##
## Ends in an error in state: 214.
##
## expr -> expr CONSTR_MATCH . CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr CONSTR_MATCH
##

Ill-formed expression for the second argument of the '~~' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL DIV INCLUDE
##
## Ends in an error in state: 186.
##
## expr -> expr DIV . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr DIV
##

Ill-formed denominator argument for the '/' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL DOT INCLUDE
##
## Ends in an error in state: 179.
##
## expr -> expr DOT . ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr DOT . LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr DOT
##

Ill-formed record field or attribute in expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL EQ INCLUDE
##
## Ends in an error in state: 212.
##
## expr -> expr EQ . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

Ill-formed expression for the second argument of the '=' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL GT INCLUDE
##
## Ends in an error in state: 210.
##
## expr -> expr GT . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr GT
##

Ill-formed expression for the second argument of the '>' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL GTEQ INCLUDE
##
## Ends in an error in state: 208.
##
## expr -> expr GTEQ . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr GTEQ
##

Ill-formed expression for the second argument of the '>=' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL LAND INCLUDE
##
## Ends in an error in state: 220.
##
## expr -> expr LAND . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LAND
##

Ill-formed expression for the second argument of the '&&' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL LBRACK LITERAL INCLUDE
##
## Ends in an error in state: 173.
##
## expr -> expr . DOT ident [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr LBRACK expr . RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
##
## The known suffix of the stack is as follows:
## expr LBRACK expr
##

Ill-formed index expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL LBRACK INCLUDE
##
## Ends in an error in state: 172.
##
## expr -> expr LBRACK . expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LBRACK
##

Ill-formed index expression: expected an expression after the '['.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL LOR INCLUDE
##
## Ends in an error in state: 204.
##
## expr -> expr LOR . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LOR
##

Ill-formed expression for the second argument of the '||' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL LPAREN LITERAL INCLUDE
##
## Ends in an error in state: 161.
##
## expr -> expr . DOT ident [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## separated_nonempty_list(COMMA,expr) -> expr . [ RPAREN ]
## separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr
##

Ill-formed argument in application: did you forget a ',' to separate arguments?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL LPAREN INCLUDE
##
## Ends in an error in state: 158.
##
## expr -> expr LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LPAREN
##

Ill-formed argument in application.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL LT INCLUDE
##
## Ends in an error in state: 202.
##
## expr -> expr LT . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LT
##

Ill-formed expression for the second argument of the '<' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL LTEQ INCLUDE
##
## Ends in an error in state: 200.
##
## expr -> expr LTEQ . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LTEQ
##

Ill-formed expression for the second argument of the '<=' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL MINUS INCLUDE
##
## Ends in an error in state: 177.
##
## expr -> expr MINUS . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr MINUS
##

Ill-formed expression for the second argument of the '-' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL NEQ INCLUDE
##
## Ends in an error in state: 175.
##
## expr -> expr NEQ . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr NEQ
##

Ill-formed expression for the second argument of the '!=' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL PLUS INCLUDE
##
## Ends in an error in state: 162.
##
## expr -> expr PLUS . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr PLUS
##

Ill-formed expression for the second argument of the '+' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL PLUS_S INCLUDE
##
## Ends in an error in state: 154.
##
## expr -> expr PLUS_S . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr PLUS_S
##

Ill-formed expression for the second argument of the '+_s' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL MUL INCLUDE
##
## Ends in an error in state: 156.
##
## expr -> expr MUL . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr MUL
##

Ill-formed expression for the second argument of the '*' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN CASE LITERAL OF BAR INCLUDE
##
## Ends in an error in state: 249.
##
## expr -> LPAREN CASE expr OF option(BAR) . loption(separated_nonempty_list(BAR,branch)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LPAREN CASE expr OF option(BAR)
##

Ill-formed branch pattern in case expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN CASE LITERAL OF UNDERSCORE ARROW ID BAR INCLUDE
##
## Ends in an error in state: 257.
##
## separated_nonempty_list(BAR,branch) -> branch BAR . separated_nonempty_list(BAR,branch) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## branch BAR
##

Ill-formed branch pattern in case expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN CASE LITERAL OF UNDERSCORE ARROW LITERAL INCLUDE
##
## Ends in an error in state: 253.
##
## branch -> pattern ARROW expr . [ RPAREN BAR ]
## expr -> expr . DOT ident [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B BAR AT ASHFT AND_B ]
##
## The known suffix of the stack is as follows:
## pattern ARROW expr
##

Ill-formed expression for branch body in case expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN CASE LITERAL OF UNDERSCORE ARROW INCLUDE
##
## Ends in an error in state: 252.
##
## branch -> pattern ARROW . expr [ RPAREN BAR ]
##
## The known suffix of the stack is as follows:
## pattern ARROW
##

Ill-formed branch body in case expression: expected an expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN CASE LITERAL OF UNDERSCORE INCLUDE
##
## Ends in an error in state: 251.
##
## branch -> pattern . ARROW expr [ RPAREN BAR ]
## pattern -> pattern . COLONCOLON pattern [ COLONCOLON ARROW ]
##
## The known suffix of the stack is as follows:
## pattern
##

Ill-formed branch in case expression: perhaps you forgot a '->' after the branch pattern?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN CASE LITERAL OF INCLUDE
##
## Ends in an error in state: 247.
##
## expr -> LPAREN CASE expr OF . option(BAR) loption(separated_nonempty_list(BAR,branch)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LPAREN CASE expr OF
##

Ill-formed pattern in branch of case expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN CASE LITERAL INCLUDE
##
## Ends in an error in state: 246.
##
## expr -> expr . DOT ident [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT PLUS_S PLUS OF NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> LPAREN CASE expr . OF option(BAR) loption(separated_nonempty_list(BAR,branch)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LPAREN CASE expr
##

Ill-formed scrutinee expression in case expression: perhaps you forgot an 'of' after the scrutinee?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN CASE INCLUDE
##
## Ends in an error in state: 245.
##
## expr -> LPAREN CASE . expr OF option(BAR) loption(separated_nonempty_list(BAR,branch)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LPAREN CASE
##

Ill-formed scrutinee expression in case expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN LITERAL COLON TVAR INCLUDE
##
## Ends in an error in state: 263.
##
## expr -> LPAREN expr COLON type_expr . RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LPAREN expr COLON type_expr
##

Ill-formed type constraint in expression: perhaps you forgot to terminate the constraint with a ')'?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN LITERAL COLON INCLUDE
##
## Ends in an error in state: 262.
##
## expr -> LPAREN expr COLON . type_expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LPAREN expr COLON
##

Ill-formed type constraint expression: expected a type expression after the ':'.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN LITERAL COMMA INCLUDE
##
## Ends in an error in state: 222.
##
## separated_nonempty_list(COMMA,expr) -> expr COMMA . separated_nonempty_list(COMMA,expr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN LITERAL INCLUDE
##
## Ends in an error in state: 261.
##
## expr -> expr . DOT ident [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON COLON BAR_B AT ASHFT AND_B ]
## expr -> LPAREN expr . COLON type_expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## separated_nonempty_list(COMMA,expr) -> expr . [ RPAREN ]
## separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## LPAREN expr
##

Ill-formed expression: perhaps you forgot a ',' separator or a ')' terminator?

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LPAREN INCLUDE
##
## Ends in an error in state: 107.
##
## expr -> LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> LPAREN . CASE expr OF option(BAR) loption(separated_nonempty_list(BAR,branch)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> LPAREN . expr COLON type_expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Ill-formed expression: expected an expression after the '('.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK MINUS INCLUDE
##
## Ends in an error in state: 106.
##
## expr -> MINUS . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## MINUS
##

Ill-formed expression for the argument of the unary '-' operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK UID DOT INCLUDE
##
## Ends in an error in state: 99.
##
## expr -> UID DOT . ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## UID DOT
##

Ill-formed field identifer in record field expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK UID INCLUDE
##
## Ends in an error in state: 98.
##
## expr -> UID . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## UID
##

Ill-formed module expression: expected a '.' after the module name.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK INCLUDE
##
## Ends in an error in state: 460.
##
## rule_elem -> LBRACK . expr RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

Ill-formed constraint expression.

toplevel: FORMAT LBRACE UID COLONEQ LPARBAR ID COLON ID COLONEQ ID COMMA INCLUDE
##
## Ends in an error in state: 560.
##
## separated_nonempty_list(COMMA,temp_decl) -> temp_decl COMMA . separated_nonempty_list(COMMA,temp_decl) [ RPARBAR ]
##
## The known suffix of the stack is as follows:
## temp_decl COMMA
##

Ill-formed temporary declaration.

toplevel: FORMAT LBRACE UID COLONEQ LPARBAR ID COLON TVAR COLONEQ LITERAL INCLUDE
##
## Ends in an error in state: 566.
##
## expr -> expr . DOT ident [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPARBAR PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## temp_decl -> ident COLON type_expr COLONEQ expr . [ RPARBAR COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON type_expr COLONEQ expr
##

Ill-formed initializer expression in temporary declaration.

toplevel: FORMAT LBRACE UID COLONEQ LPARBAR ID COLON TVAR COLONEQ INCLUDE
##
## Ends in an error in state: 565.
##
## temp_decl -> ident COLON type_expr COLONEQ . expr [ RPARBAR COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON type_expr COLONEQ
##

Ill-formed initializer expression in temporary declaration: expected an expression after the ':='.

toplevel: FORMAT LBRACE UID COLONEQ LPARBAR ID COLON TVAR INCLUDE
##
## Ends in an error in state: 564.
##
## temp_decl -> ident COLON type_expr . COLONEQ expr [ RPARBAR COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON type_expr
##

Ill-formed temporary declaration: expected an initializer expression.

toplevel: FORMAT LBRACE UID COLONEQ LPARBAR ID COLON INCLUDE
##
## Ends in an error in state: 563.
##
## temp_decl -> ident COLON . type_expr COLONEQ expr [ RPARBAR COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON
##

Ill-formed temporary declaration: expected a type specifier.

toplevel: FORMAT LBRACE UID COLONEQ LPARBAR ID INCLUDE
##
## Ends in an error in state: 562.
##
## temp_decl -> ident . COLON type_expr COLONEQ expr [ RPARBAR COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed temporary declaration: perhaps you forgot a ':' after the temporary identifier?

toplevel: FORMAT LBRACE UID COLONEQ LPARBAR RPARBAR INCLUDE
##
## Ends in an error in state: 557.
##
## rule -> LPARBAR temp_decls RPARBAR . list(rule_elem) [ SEMISEMI SEMICOLON RBRACE ]
##
## The known suffix of the stack is as follows:
## LPARBAR temp_decls RPARBAR
##

Ill-formed rule: expected a rule element, or a ';' or ';;' terminator.

toplevel: FORMAT LBRACE UID COLONEQ LPARBAR INCLUDE
##
## Ends in an error in state: 555.
##
## rule -> LPARBAR . temp_decls RPARBAR list(rule_elem) [ SEMISEMI SEMICOLON RBRACE ]
##
## The known suffix of the stack is as follows:
## LPARBAR
##

Ill-formed temporaries declaration.

toplevel: FORMAT LBRACE UID COLONEQ LPAREN UID RBRACE
##
## Ends in an error in state: 553.
##
## rule_elem -> LPAREN list(rule_elem) . RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LPAREN list(rule_elem)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 376, spurious reduction of production option(nt_args) ->
## In state 398, spurious reduction of production rule_elem -> UID option(nt_args)
## In state 551, spurious reduction of production list(rule_elem) ->
## In state 552, spurious reduction of production list(rule_elem) -> rule_elem list(rule_elem)
##

Ill-formed rule element list: perhaps you forgot a ')'?

toplevel: FORMAT LBRACE UID COLONEQ LPAREN INCLUDE
##
## Ends in an error in state: 459.
##
## rule_elem -> LPAREN . list(rule_elem) RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Ill-formed rule element.

toplevel: FORMAT LBRACE UID COLONEQ SEMICOLON INCLUDE
##
## Ends in an error in state: 571.
##
## separated_nonempty_list(SEMICOLON,rule) -> rule SEMICOLON . separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## rule SEMICOLON
##

A rule begins with an ill-formed rule element.

toplevel: FORMAT LBRACE UID COLONEQ SEMISEMI INCLUDE
##
## Ends in an error in state: 599.
##
## separated_nonempty_list(SEMISEMI,format_decl) -> format_decl SEMISEMI . separated_nonempty_list(SEMISEMI,format_decl) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## format_decl SEMISEMI
##

Ill-formed non-terminal definition: expected a non-terminal identifier (optionally prefixed with an attribute decoration).

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN LBRACK INCLUDE
##
## Ends in an error in state: 404.
##
## regexp -> LBRACK . literal_set RBRACK [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

Ill-formed literal set: expected a literal.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN LPAREN INCLUDE
##
## Ends in an error in state: 403.
##
## regexp -> LPAREN . list(regexp) RPAREN [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Ill-formed regular expression: expected a regular expression after the '('.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN UID BAR INCLUDE
##
## Ends in an error in state: 429.
##
## regexp -> regexp BAR . regexp [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## regexp BAR
##

Ill-formed regular expression: expected a regular expression after the '|'.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN UID CARET LITERAL INCLUDE
##
## Ends in an error in state: 428.
##
## expr -> expr . DOT ident [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LAND expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LOR expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . AT expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . MUL expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . MOD expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . DIV expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LT expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . GT expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . EQ expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ UID SYN_END STAR RSHFT RPAREN QUESTION POS PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND HASH GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT ASHFT AND_B ]
## regexp -> regexp CARET expr . [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## regexp CARET expr
##

Ill-formed bound expression in regular expression.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN UID CARET INCLUDE
##
## Ends in an error in state: 427.
##
## regexp -> regexp CARET . expr [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## regexp CARET
##

Ill-formed bound expression in regular expression: expected an expression after the '^'.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN INCLUDE
##
## Ends in an error in state: 399.
##
## rule_elem -> SYN_BEGIN . nonempty_list(regexp) SYN_END [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## SYN_BEGIN
##

Ill-formed regular expression: expected a regular expression.

toplevel: FORMAT LBRACE UID COLONEQ UID BAR EPSILON INCLUDE
##
## Ends in an error in state: 543.
##
## rule_elem -> rule_elem . BAR rule_elem [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem BAR rule_elem . [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . STAR [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . CARET expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . POS [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . QUESTION [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## rule_elem BAR rule_elem
##

Ill-formed rule element in rule.

toplevel: FORMAT LBRACE UID COLONEQ UID BAR INCLUDE
##
## Ends in an error in state: 542.
##
## rule_elem -> rule_elem BAR . rule_elem [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## rule_elem BAR
##

Ill-formed rule element: expected a rule element after the '|'.

toplevel: FORMAT LBRACE UID COLONEQ UID CARET LITERAL INCLUDE
##
## Ends in an error in state: 541.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RBRACK RBRACE QUESTION POS PLUS_S PLUS PAD NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND ID IB_XOR IB_OR IB_AND GTEQ GT EXCLAIM EQ EPSILON DOT DIV CONSTR_MATCH COLONCOLON CARET BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## rule_elem -> rule_elem CARET expr . [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## rule_elem CARET expr
##

Ill-formed bound expression for rule element.

toplevel: FORMAT LBRACE UID COLONEQ UID CARET INCLUDE
##
## Ends in an error in state: 540.
##
## rule_elem -> rule_elem CARET . expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## rule_elem CARET
##

Ill-formed bound expression: expected an expression after the '^'.

toplevel: FORMAT LBRACE UID COLONEQ UID RBRACK
##
## Ends in an error in state: 551.
##
## list(rule_elem) -> rule_elem . list(rule_elem) [ SEMISEMI SEMICOLON RPAREN RBRACE ]
## rule_elem -> rule_elem . BAR rule_elem [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . STAR [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . CARET expr [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . POS [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> rule_elem . QUESTION [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## rule_elem
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 376, spurious reduction of production option(nt_args) ->
## In state 398, spurious reduction of production rule_elem -> UID option(nt_args)
##

Ill-formed rule element.

toplevel: FORMAT LBRACE UID COLONEQ UID RPAREN
##
## Ends in an error in state: 570.
##
## separated_nonempty_list(SEMICOLON,rule) -> rule . [ SEMISEMI RBRACE ]
## separated_nonempty_list(SEMICOLON,rule) -> rule . SEMICOLON separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## rule
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 376, spurious reduction of production option(nt_args) ->
## In state 398, spurious reduction of production rule_elem -> UID option(nt_args)
## In state 551, spurious reduction of production list(rule_elem) ->
## In state 552, spurious reduction of production list(rule_elem) -> rule_elem list(rule_elem)
## In state 573, spurious reduction of production rule -> list(rule_elem)
##

Ill-formed rule: perhaps you forgot a ';', ';;' or '}' terminator?

toplevel: FORMAT LBRACE UID COLONEQ UID INCLUDE
##
## Ends in an error in state: 376.
##
## rule_elem -> UID . option(nt_args) [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> UID . DOT UID option(nt_args) [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> UID . LANGLE raw_int RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## UID
##

Ill-formed rule element.

toplevel: FORMAT LBRACE UID COLONEQ INCLUDE
##
## Ends in an error in state: 592.
##
## nt_defn -> UID option(ident) COLONEQ . separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) COLONEQ
##

Ill-formed rule: expected a rule after the ':='.

toplevel: FORMAT LBRACE UID ID COLONCOLON
##
## Ends in an error in state: 363.
##
## nt_defn -> UID option(ident) . COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
## nt_defn -> UID option(ident) . LBRACE nt_param_decls RBRACE COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
## nt_defn -> UID option(ident) . LPAREN param_decls RPAREN COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
## nt_defn -> UID option(ident) . LPAREN param_decls RPAREN LBRACE nt_param_decls RBRACE COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident)
##

Ill-formed non-terminal definition: expected attribute declarations or a ':=' after the non-terminal identifier.

toplevel: FORMAT LBRACE UID LBRACE ID COLON ID COMMA INCLUDE
##
## Ends in an error in state: 576.
##
## separated_nonempty_list(COMMA,nt_attr_decl) -> nt_attr_decl COMMA . separated_nonempty_list(COMMA,nt_attr_decl) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## nt_attr_decl COMMA
##

Ill-formed declaration of synthesized attributes: perhaps you forgot a '}'?

toplevel: FORMAT LBRACE UID LBRACE ID COLON ID COMMA ID INCLUDE
##
## Ends in an error in state: 578.
##
## nt_attr_decl -> ident . COLON type_expr [ RBRACE COMMA ]
## nt_attr_decl -> ident . COLON type_expr COLONEQ expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed declaration of synthesized attributes: perhaps you forgot a ':'?

toplevel: FORMAT LBRACE UID LBRACE ID COLON INCLUDE
##
## Ends in an error in state: 579.
##
## nt_attr_decl -> ident COLON . type_expr [ RBRACE COMMA ]
## nt_attr_decl -> ident COLON . type_expr COLONEQ expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON
##

Ill-formed type specifier for attribute.

toplevel: FORMAT LBRACE UID LBRACE ID COLON ID RPAREN
##
## Ends in an error in state: 580.
##
## nt_attr_decl -> ident COLON type_expr . [ RBRACE COMMA ]
## nt_attr_decl -> ident COLON type_expr . COLONEQ expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON type_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production option(type_args) ->
## In state 48, spurious reduction of production type_expr -> type_id option(type_args)
##

Ill-formed declaration of synthesized attributes: perhaps you forgot a '}'?

toplevel: FORMAT LBRACE UID LBRACE ID COLON TVAR COLONEQ INCLUDE
##
## Ends in an error in state: 581.
##
## nt_attr_decl -> ident COLON type_expr COLONEQ . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON type_expr COLONEQ
##

Ill-formed initializer for synthesized attribute.

toplevel: FORMAT LBRACE UID LBRACE ID COLON TVAR COLONEQ LITERAL INCLUDE
##
## Ends in an error in state: 582.
##
## expr -> expr . DOT ident [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## nt_attr_decl -> ident COLON type_expr COLONEQ expr . [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON type_expr COLONEQ expr
##

Ill-formed declaration of synthesized attributes: perhaps you forgot a '}'?

toplevel: FORMAT LBRACE UID LBRACE ID INCLUDE
##
## Ends in an error in state: 584.
##
## nt_attr_decl -> ident . COLON type_expr [ RBRACE COMMA ]
## nt_attr_decl -> ident . COLON type_expr COLONEQ expr [ RBRACE COMMA ]
## nt_param_decls -> ident . [ RBRACE ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed synthesized attribute declaration: perhaps you forgot a ':' or '}'?

toplevel: FORMAT LBRACE UID LBRACE RBRACE COLONEQ INCLUDE
##
## Ends in an error in state: 590.
##
## nt_defn -> UID option(ident) LBRACE nt_param_decls RBRACE COLONEQ . separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) LBRACE nt_param_decls RBRACE COLONEQ
##

Ill-formed rule: expected a rule after the ':='.

toplevel: FORMAT LBRACE UID LBRACE RBRACE INCLUDE
##
## Ends in an error in state: 589.
##
## nt_defn -> UID option(ident) LBRACE nt_param_decls RBRACE . COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) LBRACE nt_param_decls RBRACE
##

Ill-formed non-terminal definition: perhaps you forgot a ':=' after the attribute declarations?

toplevel: FORMAT LBRACE UID LBRACE INCLUDE
##
## Ends in an error in state: 587.
##
## nt_defn -> UID option(ident) LBRACE . nt_param_decls RBRACE COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) LBRACE
##

Ill-formed non-terminal definition: expected synthesized attribute declarations after the '{'.

toplevel: FORMAT LBRACE UID LPAREN ID COLON ID RBRACE
##
## Ends in an error in state: 273.
##
## separated_nonempty_list(COMMA,param_decl) -> param_decl . [ RPAREN ]
## separated_nonempty_list(COMMA,param_decl) -> param_decl . COMMA separated_nonempty_list(COMMA,param_decl) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## param_decl
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production option(type_args) ->
## In state 48, spurious reduction of production type_expr -> type_id option(type_args)
## In state 278, spurious reduction of production param_decl -> ident COLON type_expr
##

Ill-formed non-terminal definition: perhaps you forgot a ')' after the inherited attribute declarations?

toplevel: FORMAT LBRACE UID LPAREN RPAREN COLONEQ INCLUDE
##
## Ends in an error in state: 585.
##
## nt_defn -> UID option(ident) LPAREN param_decls RPAREN COLONEQ . separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) LPAREN param_decls RPAREN COLONEQ
##

Ill-formed rule: expected a rule after the ':='.

toplevel: FORMAT LBRACE UID LPAREN RPAREN LBRACE RBRACE COLONEQ INCLUDE
##
## Ends in an error in state: 371.
##
## nt_defn -> UID option(ident) LPAREN param_decls RPAREN LBRACE nt_param_decls RBRACE COLONEQ . separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) LPAREN param_decls RPAREN LBRACE nt_param_decls RBRACE COLONEQ
##

Ill-formed rule: expected a rule to follow the ':='.

toplevel: FORMAT LBRACE UID LPAREN RPAREN LBRACE RBRACE INCLUDE
##
## Ends in an error in state: 370.
##
## nt_defn -> UID option(ident) LPAREN param_decls RPAREN LBRACE nt_param_decls RBRACE . COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) LPAREN param_decls RPAREN LBRACE nt_param_decls RBRACE
##

Ill-formed non-terminal definition: perhaps you forgot a ':=' after the attribute declarations?

toplevel: FORMAT LBRACE UID LPAREN RPAREN LBRACE INCLUDE
##
## Ends in an error in state: 367.
##
## nt_defn -> UID option(ident) LPAREN param_decls RPAREN LBRACE . nt_param_decls RBRACE COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) LPAREN param_decls RPAREN LBRACE
##

Ill-formed declaration of synthesized attributes.

toplevel: FORMAT LBRACE UID LPAREN RPAREN INCLUDE
##
## Ends in an error in state: 366.
##
## nt_defn -> UID option(ident) LPAREN param_decls RPAREN . COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
## nt_defn -> UID option(ident) LPAREN param_decls RPAREN . LBRACE nt_param_decls RBRACE COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) LPAREN param_decls RPAREN
##

Ill-formed non-terminal definition: expected either a declaration of synthesized attributes or a ':='.

toplevel: FORMAT LBRACE UID LPAREN INCLUDE
##
## Ends in an error in state: 364.
##
## nt_defn -> UID option(ident) LPAREN . param_decls RPAREN COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
## nt_defn -> UID option(ident) LPAREN . param_decls RPAREN LBRACE nt_param_decls RBRACE COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID option(ident) LPAREN
##

Ill-formed inherited attribute declaration: expected an attribute identifier after the '('.

toplevel: FORMAT LBRACE UID INCLUDE
##
## Ends in an error in state: 362.
##
## nt_defn -> UID . option(ident) COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
## nt_defn -> UID . option(ident) LBRACE nt_param_decls RBRACE COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
## nt_defn -> UID . option(ident) LPAREN param_decls RPAREN COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
## nt_defn -> UID . option(ident) LPAREN param_decls RPAREN LBRACE nt_param_decls RBRACE COLONEQ separated_nonempty_list(SEMICOLON,rule) [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## UID
##

Ill-formed non-terminal definition.

toplevel: FORMAT LBRACE INCLUDE
##
## Ends in an error in state: 337.
##
## pre_decl -> FORMAT LBRACE . loption(separated_nonempty_list(SEMISEMI,format_decl)) RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## FORMAT LBRACE
##

Ill-formed non-terminal definition: expected a non-terminal identifier.

toplevel: FORMAT INCLUDE
##
## Ends in an error in state: 336.
##
## pre_decl -> FORMAT . LBRACE loption(separated_nonempty_list(SEMISEMI,format_decl)) RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## FORMAT
##

Ill-formed format grammar section: did you forget a '{'?

toplevel: FUN ID LPAREN RPAREN ARROW TVAR EQ LBRACE LITERAL INCLUDE
##
## Ends in an error in state: 321.
##
## expr -> expr . DOT ident [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## fun_decl -> ident LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr . RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr
##

Ill-formed expression in function body.

toplevel: FUN ID LPAREN RPAREN ARROW TVAR EQ LBRACE INCLUDE
##
## Ends in an error in state: 320.
##
## fun_decl -> ident LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE . expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE
##

Ill-formed function body: expected an expression after the '{'.

toplevel: FUN ID LPAREN RPAREN ARROW TVAR EQ INCLUDE
##
## Ends in an error in state: 319.
##
## fun_decl -> ident LPAREN param_decls RPAREN ARROW type_expr EQ . LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW type_expr EQ
##

Ill-formed function definition: did you forget a '{' after the '='?

toplevel: FUN ID LPAREN RPAREN ARROW TVAR INCLUDE
##
## Ends in an error in state: 318.
##
## fun_decl -> ident LPAREN param_decls RPAREN ARROW type_expr . EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW type_expr
##

Ill-formed function definition: did you forget a '=' after the function signature?

toplevel: FUN ID LPAREN RPAREN ARROW INCLUDE
##
## Ends in an error in state: 317.
##
## fun_decl -> ident LPAREN param_decls RPAREN ARROW . type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW
##

Ill-formed function definition: expected a type expression after the '->'.

toplevel: FUN ID LPAREN RPAREN INCLUDE
##
## Ends in an error in state: 316.
##
## fun_decl -> ident LPAREN param_decls RPAREN . ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN
##

Ill-formed function definition: expected an '->' after the function parameter declarations.

toplevel: FUN ID LPAREN INCLUDE
##
## Ends in an error in state: 314.
##
## fun_decl -> ident LPAREN . param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LPAREN
##

Ill-formed function definition: expected a parameter identifer after the '('.

toplevel: FUN ID INCLUDE
##
## Ends in an error in state: 313.
##
## fun_decl -> ident . LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
## fun_decl -> ident . LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed function definition: expected a declaration of type parameters or argument parameters.

toplevel: FUN INCLUDE
##
## Ends in an error in state: 312.
##
## pre_decl -> FUN . fun_decl [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## FUN
##

Ill-formed function definition: expected a function identifier.

toplevel: RECFUN ID LPAREN ID COLON ID COMMA INCLUDE
##
## Ends in an error in state: 274.
##
## separated_nonempty_list(COMMA,param_decl) -> param_decl COMMA . separated_nonempty_list(COMMA,param_decl) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## param_decl COMMA
##

Ill-formed function parameter declaration: expected a parameter identifier.

toplevel: RECFUN ID LPAREN ID COLON INCLUDE
##
## Ends in an error in state: 277.
##
## param_decl -> ident COLON . type_expr [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON
##

Expected a type expression after the ':'.

toplevel: RECFUN ID LPAREN ID INCLUDE
##
## Ends in an error in state: 276.
##
## param_decl -> ident . COLON type_expr [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Expected a ':' after the identifier.

toplevel: RECFUN ID LPAREN RPAREN ARROW TVAR EQ LBRACE LITERAL INCLUDE
##
## Ends in an error in state: 271.
##
## expr -> expr . DOT ident [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## recfun_decl -> ident LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr . RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr
##

Ill-formed expression in function body.

toplevel: RECFUN ID LPAREN RPAREN ARROW TVAR EQ LBRACE INCLUDE
##
## Ends in an error in state: 97.
##
## recfun_decl -> ident LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE . expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE
##

Ill-formed expression for function body: expected an expression after the '{'.

toplevel: RECFUN ID LPAREN RPAREN ARROW TVAR EQ INCLUDE
##
## Ends in an error in state: 96.
##
## recfun_decl -> ident LPAREN param_decls RPAREN ARROW type_expr EQ . LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW type_expr EQ
##

Ill-formed function definition: did you forget a '{' after the '='?

toplevel: RECFUN ID LPAREN RPAREN ARROW TVAR INCLUDE
##
## Ends in an error in state: 95.
##
## recfun_decl -> ident LPAREN param_decls RPAREN ARROW type_expr . EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW type_expr
##

Ill-formed function definition: did you forget a '=' after the function signature?

toplevel: RECFUN ID LPAREN RPAREN ARROW INCLUDE
##
## Ends in an error in state: 94.
##
## recfun_decl -> ident LPAREN param_decls RPAREN ARROW . type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN ARROW
##

Ill-formed function definition: expected a type expression after the '->'.

toplevel: RECFUN ID LPAREN RPAREN INCLUDE
##
## Ends in an error in state: 93.
##
## recfun_decl -> ident LPAREN param_decls RPAREN . ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN param_decls RPAREN
##

Ill-formed function definition: expected an '->' after the function parameter declarations.

toplevel: RECFUN ID LPAREN INCLUDE
##
## Ends in an error in state: 90.
##
## recfun_decl -> ident LPAREN . param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN
##

Ill-formed function definition: expected a parameter identifer after the '('.

toplevel: RECFUN ID INCLUDE
##
## Ends in an error in state: 89.
##
## recfun_decl -> ident . LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## recfun_decl -> ident . LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed function definition: expected a declaration of type parameters or argument parameters.

toplevel: TYPE ID EQ BAR UID BAR INCLUDE
##
## Ends in an error in state: 71.
##
## separated_nonempty_list(BAR,variant) -> variant BAR . separated_nonempty_list(BAR,variant) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## variant BAR
##

Ill-formed data constructor in type definition.

toplevel: TYPE ID EQ BAR UID OF TVAR UNDERSCORE
##
## Ends in an error in state: 65.
##
## separated_nonempty_list(STAR,type_expr) -> type_expr . [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD BAR AND ]
## separated_nonempty_list(STAR,type_expr) -> type_expr . STAR separated_nonempty_list(STAR,type_expr) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## type_expr
##

Ill-formed type expression.

toplevel: TYPE ID EQ BAR UID OF UNDERSCORE
##
## Ends in an error in state: 64.
##
## variant -> UID OF . loption(separated_nonempty_list(STAR,type_expr)) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## UID OF
##

Ill-formed type expression: expected a type expression after 'of'.

toplevel: TYPE ID EQ BAR UID UNDERSCORE
##
## Ends in an error in state: 63.
##
## variant -> UID . [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD BAR AND ]
## variant -> UID . OF loption(separated_nonempty_list(STAR,type_expr)) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## UID
##

Ill-formed type expression.

toplevel: TYPE ID EQ BAR INCLUDE
##
## Ends in an error in state: 62.
##
## variants -> BAR . separated_nonempty_list(BAR,variant) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## BAR
##

Ill-formed type declaration: expected a data constructor after the '|'.

toplevel: TYPE ID EQ ID AND ID EQ ID AND INCLUDE
##
## Ends in an error in state: 6.
##
## separated_nonempty_list(AND,type_decl) -> type_decl AND . separated_nonempty_list(AND,type_decl) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## type_decl AND
##

Ill-formed type declaration: expected a type identifier after 'and'.

toplevel: TYPE ID EQ ID AND ID EQ TVAR UNDERSCORE
##
## Ends in an error in state: 5.
##
## separated_nonempty_list(AND,type_decl) -> type_decl . [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
## separated_nonempty_list(AND,type_decl) -> type_decl . AND separated_nonempty_list(AND,type_decl) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## type_decl
##

Ill-formed declaration.

toplevel: TYPE ID EQ ID AND UNDERSCORE
##
## Ends in an error in state: 4.
##
## type_decls -> TYPE type_decl AND . loption(separated_nonempty_list(AND,type_decl)) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## TYPE type_decl AND
##

Ill-formed type declaration: expected a type identifier after 'and'.

toplevel: TYPE ID EQ ID UNDERSCORE
##
## Ends in an error in state: 23.
##
## type_expr -> type_id . option(type_args) [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## type_id
##

Ill-formed type expression.

toplevel: TYPE ID EQ LBRACE ID COLON ID COMMA INCLUDE
##
## Ends in an error in state: 56.
##
## separated_nonempty_list(COMMA,rec_typ_field) -> rec_typ_field COMMA . separated_nonempty_list(COMMA,rec_typ_field) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## rec_typ_field COMMA
##

Ill-formed field declaration in record type: expected a field identifier.

toplevel: TYPE ID EQ LBRACE ID COLON ID INCLUDE
##
## Ends in an error in state: 55.
##
## separated_nonempty_list(COMMA,rec_typ_field) -> rec_typ_field . [ RBRACE ]
## separated_nonempty_list(COMMA,rec_typ_field) -> rec_typ_field . COMMA separated_nonempty_list(COMMA,rec_typ_field) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## rec_typ_field
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production option(type_args) ->
## In state 48, spurious reduction of production type_expr -> type_id option(type_args)
## In state 60, spurious reduction of production rec_typ_field -> ident COLON type_expr
##

Ill-formed record type declaration: did you forget a ',' separator or a '}' terminator?

toplevel: TYPE ID EQ LBRACE ID COLON INCLUDE
##
## Ends in an error in state: 59.
##
## rec_typ_field -> ident COLON . type_expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON
##

Ill-formed field declaration in record type: expected a type expression after the ':'.

toplevel: TYPE ID EQ LBRACE ID INCLUDE
##
## Ends in an error in state: 58.
##
## rec_typ_field -> ident . COLON type_expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed field declaration in record type: expected a ':' after the field identifier.

toplevel: TYPE ID EQ LBRACE INCLUDE
##
## Ends in an error in state: 77.
##
## type_decl -> ident EQ LBRACE . rec_typ_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident EQ LBRACE
##

Ill-formed record type declaration: expected a field identifier after the '{'.

toplevel: TYPE ID EQ LBRACK TVAR INCLUDE
##
## Ends in an error in state: 49.
##
## type_expr -> LBRACK type_expr . RBRACK [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACK type_expr
##

Ill-formed list type: did you forget a ']'?

toplevel: TYPE ID EQ LBRACK INCLUDE
##
## Ends in an error in state: 22.
##
## type_expr -> LBRACK . type_expr RBRACK [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

Ill-formed list type: expected a type expression after the '['.

toplevel: TYPE ID EQ LPAREN TVAR COMMA INCLUDE
##
## Ends in an error in state: 28.
##
## separated_nonempty_list(COMMA,type_expr) -> type_expr COMMA . separated_nonempty_list(COMMA,type_expr) [ RPAREN RANGLE ]
##
## The known suffix of the stack is as follows:
## type_expr COMMA
##

Ill-formed type expression: expected a type expression after the ','.

toplevel: TYPE ID EQ LPAREN TVAR INCLUDE
##
## Ends in an error in state: 27.
##
## separated_nonempty_list(COMMA,type_expr) -> type_expr . [ RPAREN RANGLE ]
## separated_nonempty_list(COMMA,type_expr) -> type_expr . COMMA separated_nonempty_list(COMMA,type_expr) [ RPAREN RANGLE ]
##
## The known suffix of the stack is as follows:
## type_expr
##

Ill-formed type expression: expected a ',' or a terminating ')' or '>'.

toplevel: TYPE ID EQ LPAREN INCLUDE
##
## Ends in an error in state: 21.
##
## type_expr -> LPAREN . loption(separated_nonempty_list(COMMA,type_expr)) RPAREN [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Ill-formed type expression: expected a type expression after the '('.

toplevel: TYPE ID EQ TVAR UNDERSCORE
##
## Ends in an error in state: 3.
##
## type_decls -> TYPE type_decl . [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
## type_decls -> TYPE type_decl . AND loption(separated_nonempty_list(AND,type_decl)) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## TYPE type_decl
##

Ill-formed declaration.

toplevel: TYPE ID EQ UID INCLUDE
##
## Ends in an error in state: 17.
##
## type_id -> UID . DOT ident [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE LANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## UID
##

Ill-formed type expression: did you forget a '<'?

toplevel: TYPE ID EQ INCLUDE
##
## Ends in an error in state: 76.
##
## type_decl -> ident EQ . type_expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident EQ . variants [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident EQ . LBRACE rec_typ_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident EQ
##

Ill-formed type declaration: expected a type expression after the '='.

toplevel: TYPE ID LPAREN RPAREN EQ LBRACE INCLUDE
##
## Ends in an error in state: 51.
##
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ LBRACE . rec_typ_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ LBRACE
##

Ill-formed record field in type declaration: expected a field identifier after the '{'.

toplevel: TYPE ID LPAREN RPAREN EQ INCLUDE
##
## Ends in an error in state: 16.
##
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ . type_expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ . variants [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ . LBRACE rec_typ_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ
##

Ill-formed type declaration: expected a variant type, record type or type expression after the '='.

toplevel: TYPE ID LPAREN RPAREN INCLUDE
##
## Ends in an error in state: 15.
##
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN . EQ type_expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN . EQ variants [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN . EQ LBRACE rec_typ_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN
##

Ill-formed type declaration: did you forget a '=' after the ')'?

toplevel: TYPE ID LPAREN TVAR COMMA INCLUDE
##
## Ends in an error in state: 11.
##
## separated_nonempty_list(COMMA,TVAR) -> TVAR COMMA . separated_nonempty_list(COMMA,TVAR) [ RPAREN RANGLE ]
##
## The known suffix of the stack is as follows:
## TVAR COMMA
##

Ill-formed type variable list: expected a type variable after the ','.

toplevel: TYPE ID LPAREN TVAR INCLUDE
##
## Ends in an error in state: 10.
##
## separated_nonempty_list(COMMA,TVAR) -> TVAR . [ RPAREN RANGLE ]
## separated_nonempty_list(COMMA,TVAR) -> TVAR . COMMA separated_nonempty_list(COMMA,TVAR) [ RPAREN RANGLE ]
##
## The known suffix of the stack is as follows:
## TVAR
##

Ill-formed type variable list: did you forget a ',', ')' or '>'?

toplevel: TYPE ID LPAREN INCLUDE
##
## Ends in an error in state: 9.
##
## type_decl -> ident LPAREN . loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ type_expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident LPAREN . loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ variants [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident LPAREN . loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ LBRACE rec_typ_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN
##

Ill-formed type variable in type declaration: expected a type variable after the '('.

toplevel: TYPE ID INCLUDE
##
## Ends in an error in state: 8.
##
## type_decl -> ident . EQ type_expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident . LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ type_expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident . EQ variants [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident . LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ variants [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident . EQ LBRACE rec_typ_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident . LPAREN loption(separated_nonempty_list(COMMA,TVAR)) RPAREN EQ LBRACE rec_typ_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed type declaration: expected a type variable list or '='.

toplevel: TYPE INCLUDE
##
## Ends in an error in state: 1.
##
## type_decls -> TYPE . type_decl [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
## type_decls -> TYPE . type_decl AND loption(separated_nonempty_list(AND,type_decl)) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## TYPE
##

Ill-formed type declaration: expected a type identifier.

toplevel: UNDERSCORE
##
## Ends in an error in state: 0.
##
## toplevel' -> . toplevel [ # ]
##
## The known suffix of the stack is as follows:
##
##

Ill-formed declaration.

toplevel: INCLUDE ID UNDERSCORE
##
## Ends in an error in state: 649.
##
## list(pre_decl) -> pre_decl . list(pre_decl) [ EOF ]
##
## The known suffix of the stack is as follows:
## pre_decl
##

Ill-formed declaration.

toplevel: INCLUDE LBRACE ID COMMA INCLUDE
##
## Ends in an error in state: 300.
##
## separated_nonempty_list(COMMA,def) -> def COMMA . separated_nonempty_list(COMMA,def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## def COMMA
##

Ill-formed include declaration: expected a file identifer (i.e. the basename of a Parsley source file) after the ','.

toplevel: INCLUDE LBRACE ID INCLUDE
##
## Ends in an error in state: 299.
##
## separated_nonempty_list(COMMA,def) -> def . [ RBRACE ]
## separated_nonempty_list(COMMA,def) -> def . COMMA separated_nonempty_list(COMMA,def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## def
##

Ill-formed include declaration: did you forget a ',' separator or a '}' terminator?

toplevel: INCLUDE LBRACE INCLUDE
##
## Ends in an error in state: 294.
##
## pre_decl -> INCLUDE LBRACE . loption(separated_nonempty_list(COMMA,def)) RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## INCLUDE LBRACE
##

Ill-formed include declaration: expected a file identifier (i.e. the basename of a Parsley source file).

toplevel: INCLUDE INCLUDE
##
## Ends in an error in state: 292.
##
## pre_decl -> INCLUDE . def [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
## pre_decl -> INCLUDE . LBRACE loption(separated_nonempty_list(COMMA,def)) RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## INCLUDE
##

Ill-formed include declaration: expected a file identifier (i.e. the basename of a Parsley source file) or an opening '{'.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL LLBRACK INCLUDE
##
## Ends in an error in state: 166.
##
## expr -> expr LLBRACK . raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr LLBRACK . raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LLBRACK
##

Ill-formed bitrange: expected a numerical argument.

toplevel: BITFIELD ID EQ LBRACE ID COLON INCLUDE
##
## Ends in an error in state: 637.
##
## bit_range_field -> ident COLON . raw_int [ RBRACE COMMA ]
## bit_range_field -> ident COLON . raw_int COLON raw_int [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON
##

Ill-formed bitfield: expected a numerical index.

toplevel: BITFIELD ID EQ LBRACE ID INCLUDE
##
## Ends in an error in state: 636.
##
## bit_range_field -> ident . COLON raw_int [ RBRACE COMMA ]
## bit_range_field -> ident . COLON raw_int COLON raw_int [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed bitfield: expected a colon.

toplevel: BITFIELD ID EQ LBRACE INCLUDE
##
## Ends in an error in state: 633.
##
## bitfield -> ident EQ LBRACE . bit_range_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident EQ LBRACE
##

Ill-formed bitfield: expected a field name.

toplevel: BITFIELD ID EQ INCLUDE
##
## Ends in an error in state: 632.
##
## bitfield -> ident EQ . LBRACE bit_range_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident EQ
##

Ill-formed bitfield: expected a left brace.

toplevel: BITFIELD ID INCLUDE
##
## Ends in an error in state: 631.
##
## bitfield -> ident . EQ LBRACE bit_range_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed bitfield: expected an equals character.

toplevel: BITFIELD INCLUDE
##
## Ends in an error in state: 630.
##
## type_decls -> BITFIELD . bitfield [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## BITFIELD
##

Ill-formed bitfield: expected a bitfield name.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK ID ARROW ID LPAREN LITERAL INCLUDE
##
## Ends in an error in state: 151.
##
## expr -> ident ARROW ident LPAREN expr . RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT ident [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
##
## The known suffix of the stack is as follows:
## ident ARROW ident LPAREN expr
##

Ill-formed argument for bitfield record operator: there might be a missing right parenthesis.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK ID ARROW ID LPAREN INCLUDE
##
## Ends in an error in state: 150.
##
## expr -> ident ARROW ident LPAREN . expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## ident ARROW ident LPAREN
##

Ill-formed argument for bitfield record operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK ID ARROW ID INCLUDE
##
## Ends in an error in state: 149.
##
## expr -> ident ARROW ident . LPAREN expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## ident ARROW ident
##

The argument for a bitfield record operator needs a preceding left parenthesis.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK ID ARROW INCLUDE
##
## Ends in an error in state: 148.
##
## expr -> ident ARROW . ident LPAREN expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## ident ARROW
##

Ill-formed name for a bitfield record operator.

toplevel: FORMAT LBRACE UID COLONEQ ALIGN USE_BITFIELD
##
## Ends in an error in state: 531.
##
## rule_elem -> ALIGN . LANGLE raw_int RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## ALIGN
##

Ill-formed alignment: expected an opening '<' preceding a numerical alignment width.

toplevel: FORMAT LBRACE UID COLONEQ PAD USE_BITFIELD
##
## Ends in an error in state: 447.
##
## rule_elem -> PAD . LANGLE raw_int COMMA BV_LITERAL RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## PAD
##

Ill-formed pad specifier: expected a '<' preceding a numerical width.

toplevel: FORMAT LBRACE UID COLONEQ USE_BITFIELD LPAREN ID USE_BITFIELD
##
## Ends in an error in state: 374.
##
## rule_elem -> USE_BITFIELD LPAREN ident . RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## USE_BITFIELD LPAREN ident
##

Ill-formed bitfield use specifier: expected a terminating ')'.

toplevel: FORMAT LBRACE UID COLONEQ USE_BITFIELD LPAREN USE_BITFIELD
##
## Ends in an error in state: 373.
##
## rule_elem -> USE_BITFIELD LPAREN . ident RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## USE_BITFIELD LPAREN
##

Ill-formed bitfield use specifier: expected an identifier for a type.

toplevel: FORMAT LBRACE UID COLONEQ USE_BITFIELD USE_BITFIELD
##
## Ends in an error in state: 372.
##
## rule_elem -> USE_BITFIELD . LPAREN ident RPAREN [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## USE_BITFIELD
##

Ill-formed bitfield use specifier: expected an opening '('.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL AND_B USE_BITFIELD
##
## Ends in an error in state: 190.
##
## expr -> expr AND_B . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr AND_B
##

Ill-formed expression: expected a bitvector argument.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LITERAL BAR_B USE_BITFIELD
##
## Ends in an error in state: 188.
##
## expr -> expr BAR_B . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr BAR_B
##

Ill-formed expression: expected a bitvector argument.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK TILDE USE_BITFIELD
##
## Ends in an error in state: 101.
##
## expr -> TILDE . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## TILDE
##

Ill-formed expression: expected a bitvector argument.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET UNDERSCORE COLONCOLON UNDERSCORE USE_BITFIELD
##
## Ends in an error in state: 125.
##
## pattern -> pattern . COLONCOLON pattern [ RPAREN EQ COMMA COLONCOLON ARROW ]
## pattern -> pattern COLONCOLON pattern . [ RPAREN EQ COMMA COLONCOLON ARROW ]
##
## The known suffix of the stack is as follows:
## pattern COLONCOLON pattern
##

Ill-formed pattern: unexpected operator.

toplevel: FORMAT LBRACE UID COLONEQ LBRACK LET UNDERSCORE COLONCOLON USE_BITFIELD
##
## Ends in an error in state: 124.
##
## pattern -> pattern COLONCOLON . pattern [ RPAREN EQ COMMA COLONCOLON ARROW ]
##
## The known suffix of the stack is as follows:
## pattern COLONCOLON
##

Ill-formed pattern argument for list pattern.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL USE_BITFIELD
##
## Ends in an error in state: 445.
##
## expr -> expr . DOT ident [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACK PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## rule_elem -> SET_VIEW expr . RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## SET_VIEW expr
##

Ill-formed expression argument for set-view operator.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW USE_BITFIELD
##
## Ends in an error in state: 444.
##
## rule_elem -> SET_VIEW . expr RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## SET_VIEW
##

Ill-formed argument for set-view operator: expected an expression.

toplevel: CONST ID COLON TVAR EQ LITERAL USE_BITFIELD
##
## Ends in an error in state: 629.
##
## expr -> expr . DOT ident [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ TYPE RSHFT RECFUN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND INCLUDE IMPORT IB_XOR IB_OR IB_AND GTEQ GT FUN FORMAT FOREIGN EQ EOF DOT DIV CONSTR_MATCH CONST COLONCOLON BITFIELD BAR_B AT ASHFT AND_B ]
## pre_decl -> CONST ident COLON type_expr EQ expr . [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## CONST ident COLON type_expr EQ expr
##

Ill-formed expression value for constant declaration.

toplevel: CONST ID COLON TVAR EQ USE_BITFIELD
##
## Ends in an error in state: 628.
##
## pre_decl -> CONST ident COLON type_expr EQ . expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## CONST ident COLON type_expr EQ
##

Ill-formed expression for constant declaration.

toplevel: CONST ID COLON TVAR USE_BITFIELD
##
## Ends in an error in state: 627.
##
## pre_decl -> CONST ident COLON type_expr . EQ expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## CONST ident COLON type_expr
##

Ill-formed constant declaration: expected an equals sign.

toplevel: CONST ID COLON USE_BITFIELD
##
## Ends in an error in state: 626.
##
## pre_decl -> CONST ident COLON . type_expr EQ expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## CONST ident COLON
##

Ill-formed constant declaration: expected a type expression.

toplevel: CONST ID USE_BITFIELD
##
## Ends in an error in state: 625.
##
## pre_decl -> CONST ident . COLON type_expr EQ expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## CONST ident
##

Ill-formed constant declaration: expected a colon.

toplevel: CONST USE_BITFIELD
##
## Ends in an error in state: 624.
##
## pre_decl -> CONST . ident COLON type_expr EQ expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## CONST
##

Ill-formed constant declaration: expected an identifier.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW EXCLAIM LITERAL UNDERSCORE
##
## Ends in an error in state: 225.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> EXCLAIM expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## EXCLAIM expr
##

Ill-formed expression for operator argument.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW ID UNDERSCORE
##
## Ends in an error in state: 147.
##
## expr -> ident . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> ident . ARROW ident LPAREN expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LET UNDERSCORE EQ LITERAL IN LITERAL UNDERSCORE
##
## Ends in an error in state: 244.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> LET pattern EQ expr IN expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## LET pattern EQ expr IN expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL AND_B LITERAL UNDERSCORE
##
## Ends in an error in state: 191.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr AND_B expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr AND_B expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL AT LITERAL UNDERSCORE
##
## Ends in an error in state: 199.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr AT expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr AT expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL BAR_B LITERAL UNDERSCORE
##
## Ends in an error in state: 189.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr BAR_B expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr BAR_B expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL COLONCOLON LITERAL UNDERSCORE
##
## Ends in an error in state: 195.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr COLONCOLON expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr COLONCOLON expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL DIV LITERAL UNDERSCORE
##
## Ends in an error in state: 187.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr DIV expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr DIV expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL EQ LITERAL UNDERSCORE
##
## Ends in an error in state: 213.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr EQ expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr EQ expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL GT LITERAL UNDERSCORE
##
## Ends in an error in state: 211.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr GT expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr GT expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL GTEQ LITERAL UNDERSCORE
##
## Ends in an error in state: 209.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr GTEQ expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr GTEQ expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL LAND LITERAL UNDERSCORE
##
## Ends in an error in state: 221.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr LAND expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LAND expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL LOR LITERAL UNDERSCORE
##
## Ends in an error in state: 205.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr LOR expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LOR expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL LT LITERAL UNDERSCORE
##
## Ends in an error in state: 203.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr LT expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LT expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL LTEQ LITERAL UNDERSCORE
##
## Ends in an error in state: 201.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr LTEQ expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LTEQ expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL MINUS LITERAL UNDERSCORE
##
## Ends in an error in state: 178.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr MINUS expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr MINUS expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL NEQ LITERAL UNDERSCORE
##
## Ends in an error in state: 176.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr NEQ expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr NEQ expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL PLUS LITERAL UNDERSCORE
##
## Ends in an error in state: 163.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr PLUS expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr PLUS expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL PLUS_S LITERAL UNDERSCORE
##
## Ends in an error in state: 155.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr PLUS_S expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr PLUS_S expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW LITERAL MUL LITERAL UNDERSCORE
##
## Ends in an error in state: 157.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr MUL expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr MUL expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW MINUS LITERAL UNDERSCORE
##
## Ends in an error in state: 265.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> MINUS expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## MINUS expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ SET_VIEW TILDE LITERAL UNDERSCORE
##
## Ends in an error in state: 270.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> TILDE expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## TILDE expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE DECO ID LPAREN ID COLON RPAREN SEMICOLON USE_BITFIELD
##
## Ends in an error in state: 358.
##
## separated_nonempty_list(SEMICOLON,deco_spec) -> deco_spec SEMICOLON . separated_nonempty_list(SEMICOLON,deco_spec) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## deco_spec SEMICOLON
##

Invalid decorator type.

toplevel: FORMAT LBRACE DECO RBRACK USE_BITFIELD
##
## Ends in an error in state: 361.
##
## format_decl -> option(deco_decl) . nt_defn [ SEMISEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## option(deco_decl)
##

Invalid non-terminal name.

toplevel: RECFUN USE_BITFIELD
##
## Ends in an error in state: 84.
##
## pre_decl -> RECFUN . separated_nonempty_list(AND,recfun_decl) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## RECFUN
##

Ill-formed recursive function definition: expected a function identifier.

toplevel: RECFUN ID LPAREN RPAREN ARROW ID EQ LBRACE ID RBRACE USE_BITFIELD
##
## Ends in an error in state: 86.
##
## separated_nonempty_list(AND,recfun_decl) -> recfun_decl . [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
## separated_nonempty_list(AND,recfun_decl) -> recfun_decl . AND separated_nonempty_list(AND,recfun_decl) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## recfun_decl
##

Ill-formed definition: expected a top-level definition or 'and' to define a mutually recursive function).

toplevel: RECFUN ID LPAREN RPAREN ARROW ID EQ LBRACE ID RBRACE AND USE_BITFIELD
##
## Ends in an error in state: 87.
##
## separated_nonempty_list(AND,recfun_decl) -> recfun_decl AND . separated_nonempty_list(AND,recfun_decl) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## recfun_decl AND
##

Ill-formed recursive function definition: expected a function identifier.

toplevel: CONST ID COLON ID EQ ID MOD USE_BITFIELD
##
## Ends in an error in state: 164.
##
## expr -> expr MOD . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr MOD
##

Ill-formed expression: expected an expression after an operator.

toplevel: CONST ID COLON ID EQ ID MOD BV_LITERAL UNDERSCORE
##
## Ends in an error in state: 165.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr MOD expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr MOD expr
##

Ill-formed expression: perhaps an expression was not terminated properly?

toplevel: FORMAT LBRACE UID COLONEQ SLASH_SF_LBRACK USE_BITFIELD
##
## Ends in an error in state: 438.
##
## rule_elem -> SLASH_SF_LBRACK . LITERAL RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## SLASH_SF_LBRACK
##

Ill-formed scan rule element: expected a literal scan tag or a view expression.

toplevel: FORMAT LBRACE UID COLONEQ SLASH_SF_LBRACK LITERAL USE_BITFIELD
##
## Ends in an error in state: 439.
##
## rule_elem -> SLASH_SF_LBRACK LITERAL . RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## SLASH_SF_LBRACK LITERAL
##

Ill-formed terminator for scan rule element: expected a ']'.

toplevel: FORMAT LBRACE UID COLONEQ SLASH_SB_LBRACK USE_BITFIELD
##
## Ends in an error in state: 441.
##
## rule_elem -> SLASH_SB_LBRACK . LITERAL RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## SLASH_SB_LBRACK
##

Ill-formed scan rule element: expected a literal scan tag or a view expression.

toplevel: FORMAT LBRACE UID COLONEQ SLASH_SB_LBRACK LITERAL USE_BITFIELD
##
## Ends in an error in state: 442.
##
## rule_elem -> SLASH_SB_LBRACK LITERAL . RBRACK [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## SLASH_SB_LBRACK LITERAL
##

Ill-formed terminator for scan rule element: expected a ']'.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE PRINT USE_BITFIELD
##
## Ends in an error in state: 468.
##
## stmt -> PRINT . LPAREN expr RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## PRINT
##

Ill-formed print statement: expected a '(' after '$print'.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE PRINT LPAREN USE_BITFIELD
##
## Ends in an error in state: 469.
##
## stmt -> PRINT LPAREN . expr RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN
##

Ill-formed print statement: expected an expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE PRINT LPAREN ID USE_BITFIELD
##
## Ends in an error in state: 470.
##
## expr -> expr . DOT ident [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## stmt -> PRINT LPAREN expr . RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
##

Ill-formed argument in print statement: there might be a missing closing ')'.

toplevel: CONST ID COLON ID EQ LBRACE UID USE_BITFIELD
##
## Ends in an error in state: 134.
##
## rec_exp_field -> UID . DOT ident COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UID
##

Ill-formed field expression: expected a '.' to indicate a module dereference (or there may be an erroneous capitalization of an identifier).

toplevel: CONST ID COLON ID EQ LBRACE UID DOT USE_BITFIELD
##
## Ends in an error in state: 135.
##
## rec_exp_field -> UID DOT . ident COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UID DOT
##

Ill-formed field expression: expected a lower-case identifier to specify a field component of a module.

toplevel: CONST ID COLON ID EQ LBRACE UID DOT ID USE_BITFIELD
##
## Ends in an error in state: 136.
##
## rec_exp_field -> UID DOT ident . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UID DOT ident
##

Ill-formed field expression: expected a colon ':' before a field initializer.

toplevel: CONST ID COLON ID EQ LBRACE UID DOT ID COLON USE_BITFIELD
##
## Ends in an error in state: 137.
##
## rec_exp_field -> UID DOT ident COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UID DOT ident COLON
##

Ill-formed field expression: expected an expression as a field initializer.

toplevel: CONST ID COLON ID EQ ID DOT LPAREN USE_BITFIELD
##
## Ends in an error in state: 180.
##
## expr -> expr DOT LPAREN . UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr DOT LPAREN
##

Ill-formed field expression: expected an uppercase identifier for a module name.

toplevel: CONST ID COLON ID EQ ID DOT LPAREN UID USE_BITFIELD
##
## Ends in an error in state: 181.
##
## expr -> expr DOT LPAREN UID . DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr DOT LPAREN UID
##

Ill-formed field expression: expected a '.' to indicate a module dereference.

toplevel: CONST ID COLON ID EQ ID DOT LPAREN UID DOT USE_BITFIELD
##
## Ends in an error in state: 182.
##
## expr -> expr DOT LPAREN UID DOT . ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr DOT LPAREN UID DOT
##

Ill-formed field expression: expected a lower-case identifier to specify a field component of a module.

toplevel: CONST ID COLON ID EQ ID DOT LPAREN UID DOT ID USE_BITFIELD
##
## Ends in an error in state: 183.
##
## expr -> expr DOT LPAREN UID DOT ident . RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr DOT LPAREN UID DOT ident
##

Ill-formed field expression: expected a ')' to close the cross-module field access expression.

toplevel: CONST ID COLON ID EQ LBRACE UID DOT ID COLON ID USE_BITFIELD
##
## Ends in an error in state: 227.
##
## expr -> expr . DOT ident [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## rec_exp_field -> UID DOT ident COLON expr . [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UID DOT ident COLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
##

Ill-formed expression for field initializer.

toplevel: FORMAT LBRACE UID COLONEQ UID DOT USE_BITFIELD
##
## Ends in an error in state: 393.
##
## rule_elem -> UID DOT . UID option(nt_args) [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## UID DOT
##

Ill-formed module component: expected a lower-case identifier to specify a non-terminal component of a module.

toplevel: FORMAT LBRACE UID COLONEQ UID DOT UID INCLUDE
##
## Ends in an error in state: 394.
##
## rule_elem -> UID DOT UID . option(nt_args) [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## UID DOT UID
##

Ill-formed rule element.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN UID USE_BITFIELD
##
## Ends in an error in state: 400.
##
## regexp -> UID . [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> UID . DOT UID [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## UID
##

Ill-formed regular expression.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN UID DOT USE_BITFIELD
##
## Ends in an error in state: 401.
##
## regexp -> UID DOT . UID [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## UID DOT
##

Ill-formed regular expression: expected an upper-case identifier to specify a non-terminal component of a module.

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM UID USE_BITFIELD
##
## Ends in an error in state: 405.
##
## literal_set -> UID . [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
## literal_set -> UID . DOT UID [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## UID
##

Ill-formed literal specifier.

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM UID DOT USE_BITFIELD
##
## Ends in an error in state: 406.
##
## literal_set -> UID DOT . UID [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## UID DOT
##

Ill-formed literal: expected an upper-case identifier to specify a non-terminal component of a module.

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM LPAREN LITERAL UID
##
## Ends in an error in state: 416.
##
## literal_set -> literal_set . BACKSLASH literal_set [ RPAREN BACKSLASH ]
## literal_set -> LPAREN literal_set . RPAREN [ UID RPAREN RBRACK LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## LPAREN literal_set
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 409, spurious reduction of production separated_nonempty_list(BAR,LITERAL) -> LITERAL
## In state 415, spurious reduction of production literal_set -> separated_nonempty_list(BAR,LITERAL)
##

Ill-formed literal in literal set.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN LBRACK LITERAL UID
##
## Ends in an error in state: 420.
##
## literal_set -> literal_set . BACKSLASH literal_set [ RBRACK BACKSLASH ]
## regexp -> LBRACK literal_set . RBRACK [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## LBRACK literal_set
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 409, spurious reduction of production separated_nonempty_list(BAR,LITERAL) -> LITERAL
## In state 415, spurious reduction of production literal_set -> separated_nonempty_list(BAR,LITERAL)
##

Ill-formed literal.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN LPAREN HASH SYN_END
##
## Ends in an error in state: 423.
##
## list(regexp) -> regexp . list(regexp) [ RPAREN ]
## regexp -> regexp . STAR [ UID STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . CARET expr [ UID STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . POS [ UID STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . QUESTION [ UID STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . BAR regexp [ UID STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## regexp
##

Ill-formed regular expression.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN HASH BAR HASH USE_BITFIELD
##
## Ends in an error in state: 430.
##
## regexp -> regexp . STAR [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . CARET expr [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . POS [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . QUESTION [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . BAR regexp [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp BAR regexp . [ UID SYN_END STAR RPAREN QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## regexp BAR regexp
##

Ill-formed regular expression.

toplevel: FORMAT LBRACE UID COLONEQ SYN_BEGIN HASH RPAREN
##
## Ends in an error in state: 434.
##
## nonempty_list(regexp) -> regexp . [ SYN_END ]
## nonempty_list(regexp) -> regexp . nonempty_list(regexp) [ SYN_END ]
## regexp -> regexp . STAR [ UID SYN_END STAR QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . CARET expr [ UID SYN_END STAR QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . POS [ UID SYN_END STAR QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . QUESTION [ UID SYN_END STAR QUESTION POS LPAREN LBRACK HASH CARET BAR ]
## regexp -> regexp . BAR regexp [ UID SYN_END STAR QUESTION POS LPAREN LBRACK HASH CARET BAR ]
##
## The known suffix of the stack is as follows:
## regexp
##

Ill-formed regular expression.

toplevel: FORMAT LBRACE UID COLONEQ EXCLAIM LITERAL RPAREN
##
## Ends in an error in state: 517.
##
## list(literal_set) -> literal_set . list(literal_set) [ EXCLAIM ]
## literal_set -> literal_set . BACKSLASH literal_set [ UID LPAREN LITERAL EXCLAIM BACKSLASH ]
##
## The known suffix of the stack is as follows:
## literal_set
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 409, spurious reduction of production separated_nonempty_list(BAR,LITERAL) -> LITERAL
## In state 415, spurious reduction of production literal_set -> separated_nonempty_list(BAR,LITERAL)
##

Ill-formed literal set.

toplevel: IMPORT USE_BITFIELD
##
## Ends in an error in state: 303.
##
## pre_decl -> IMPORT . UID [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
## pre_decl -> IMPORT . LBRACE loption(separated_nonempty_list(COMMA,UID)) RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## IMPORT
##

Ill-formed import declaration: expected a module identifier.

toplevel: IMPORT LBRACE USE_BITFIELD
##
## Ends in an error in state: 305.
##
## pre_decl -> IMPORT LBRACE . loption(separated_nonempty_list(COMMA,UID)) RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## IMPORT LBRACE
##

Ill-formed import declaration: expected a module identifier.

toplevel: IMPORT LBRACE UID USE_BITFIELD
##
## Ends in an error in state: 306.
##
## separated_nonempty_list(COMMA,UID) -> UID . [ RBRACE ]
## separated_nonempty_list(COMMA,UID) -> UID . COMMA separated_nonempty_list(COMMA,UID) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## UID
##

Ill-formed import declaration: did you forget a ',' or a '}' terminator?

toplevel: IMPORT LBRACE UID COMMA USE_BITFIELD
##
## Ends in an error in state: 307.
##
## separated_nonempty_list(COMMA,UID) -> UID COMMA . separated_nonempty_list(COMMA,UID) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## UID COMMA
##

Ill-formed import declaration: expected a module identifier.

toplevel: BITFIELD ID EQ LBRACE ID COLON LPAREN USE_BITFIELD
##
## Ends in an error in state: 34.
##
## raw_int -> LPAREN . raw_int RPAREN [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Ill-formed integer expression: expected an integer.

toplevel: CONST ID COLON ID EQ ID LLBRACK RAW_INT RPAREN
##
## Ends in an error in state: 167.
##
## expr -> expr LLBRACK raw_int . COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr LLBRACK raw_int . RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## raw_int -> raw_int . POS raw_int [ STAR RRBRACK POS NEG COLON ]
## raw_int -> raw_int . NEG raw_int [ STAR RRBRACK POS NEG COLON ]
## raw_int -> raw_int . STAR raw_int [ STAR RRBRACK POS NEG COLON ]
##
## The known suffix of the stack is as follows:
## expr LLBRACK raw_int
##

Ill-formed integer expression: expected a ':' for a range, a closing ']]', or a integer operator.

toplevel: CONST ID COLON ID EQ ID LLBRACK RAW_INT COLON USE_BITFIELD
##
## Ends in an error in state: 169.
##
## expr -> expr LLBRACK raw_int COLON . raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LLBRACK raw_int COLON
##

Ill-formed index range: expected an integer.

toplevel: CONST ID COLON ID EQ ID LLBRACK RAW_INT COLON RAW_INT RPAREN
##
## Ends in an error in state: 170.
##
## expr -> expr LLBRACK raw_int COLON raw_int . RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## raw_int -> raw_int . POS raw_int [ STAR RRBRACK POS NEG ]
## raw_int -> raw_int . NEG raw_int [ STAR RRBRACK POS NEG ]
## raw_int -> raw_int . STAR raw_int [ STAR RRBRACK POS NEG ]
##
## The known suffix of the stack is as follows:
## expr LLBRACK raw_int COLON raw_int
##

Ill-formed index range: expected a closing ']]', or an integer operator.

toplevel: BITFIELD ID EQ LBRACE ID COLON RAW_INT RRBRACK
##
## Ends in an error in state: 638.
##
## bit_range_field -> ident COLON raw_int . [ RBRACE COMMA ]
## bit_range_field -> ident COLON raw_int . COLON raw_int [ RBRACE COMMA ]
## raw_int -> raw_int . POS raw_int [ STAR RBRACE POS NEG COMMA COLON ]
## raw_int -> raw_int . NEG raw_int [ STAR RBRACE POS NEG COMMA COLON ]
## raw_int -> raw_int . STAR raw_int [ STAR RBRACE POS NEG COMMA COLON ]
##
## The known suffix of the stack is as follows:
## ident COLON raw_int
##

Ill-formed bitfield range.

toplevel: BITFIELD ID EQ LBRACE ID COLON RAW_INT COLON USE_BITFIELD
##
## Ends in an error in state: 639.
##
## bit_range_field -> ident COLON raw_int COLON . raw_int [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON raw_int COLON
##

Ill-formed bitfield range: expected an integer.

toplevel: BITFIELD ID EQ LBRACE ID COLON RAW_INT COLON RAW_INT RRBRACK
##
## Ends in an error in state: 640.
##
## bit_range_field -> ident COLON raw_int COLON raw_int . [ RBRACE COMMA ]
## raw_int -> raw_int . POS raw_int [ STAR RBRACE POS NEG COMMA ]
## raw_int -> raw_int . NEG raw_int [ STAR RBRACE POS NEG COMMA ]
## raw_int -> raw_int . STAR raw_int [ STAR RBRACE POS NEG COMMA ]
##
## The known suffix of the stack is as follows:
## ident COLON raw_int COLON raw_int
##

Ill-formed bitfield: expected a ',' or a closing '}'.

toplevel: BITFIELD ID EQ LBRACE ID COLON RAW_INT COMMA USE_BITFIELD
##
## Ends in an error in state: 644.
##
## separated_nonempty_list(COMMA,bit_range_field) -> bit_range_field COMMA . separated_nonempty_list(COMMA,bit_range_field) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## bit_range_field COMMA
##

Ill-formed bitfield: expected a field specifier.

toplevel: TYPE ID LPAREN TVAR RANGLE
##
## Ends in an error in state: 14.
##
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) . RPAREN EQ type_expr [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) . RPAREN EQ variants [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
## type_decl -> ident LPAREN loption(separated_nonempty_list(COMMA,TVAR)) . RPAREN EQ LBRACE rec_typ_fields RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LPAREN loption(separated_nonempty_list(COMMA,TVAR))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 10, spurious reduction of production separated_nonempty_list(COMMA,TVAR) -> TVAR
## In state 13, spurious reduction of production loption(separated_nonempty_list(COMMA,TVAR)) -> separated_nonempty_list(COMMA,TVAR)
##

Ill-formed type declaration: expected a ',' or a ')'.

toplevel: CONST ID COLON ID LANGLE USE_BITFIELD
##
## Ends in an error in state: 24.
##
## type_args -> LANGLE . loption(separated_nonempty_list(COMMA,type_expr)) RANGLE [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
## type_args -> LANGLE . raw_int RANGLE [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## LANGLE
##

Invalid type parameter: expected an integer bitwidth or a type expression.

toplevel: CONST ID COLON ID LANGLE LPAREN USE_BITFIELD
##
## Ends in an error in state: 26.
##
## raw_int -> LPAREN . raw_int RPAREN [ STAR RPAREN RANGLE POS NEG ]
## type_expr -> LPAREN . loption(separated_nonempty_list(COMMA,type_expr)) RPAREN [ RPAREN RANGLE COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Invalid type parameter: expected an integer expression or a type expression.

toplevel: CONST ID COLON ID LANGLE LPAREN RAW_INT RRBRACK
##
## Ends in an error in state: 32.
##
## raw_int -> raw_int . POS raw_int [ STAR RPAREN POS NEG ]
## raw_int -> raw_int . NEG raw_int [ STAR RPAREN POS NEG ]
## raw_int -> raw_int . STAR raw_int [ STAR RPAREN POS NEG ]
## raw_int -> LPAREN raw_int . RPAREN [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN raw_int
##

Ill-formed bitwidth expression: expected an integer operator or a closing ')'.

toplevel: CONST ID COLON ID LANGLE RAW_INT STAR USE_BITFIELD
##
## Ends in an error in state: 33.
##
## raw_int -> raw_int STAR . raw_int [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
##
## The known suffix of the stack is as follows:
## raw_int STAR
##

Ill-formed bitwidth expression: expected an integer.

toplevel: CONST ID COLON ID LANGLE RAW_INT POS USE_BITFIELD
##
## Ends in an error in state: 37.
##
## raw_int -> raw_int POS . raw_int [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
##
## The known suffix of the stack is as follows:
## raw_int POS
##

Ill-formed bitwidth expression: expected an integer.

toplevel: CONST ID COLON ID LANGLE RAW_INT POS RAW_INT USE_BITFIELD
##
## Ends in an error in state: 38.
##
## raw_int -> raw_int . POS raw_int [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
## raw_int -> raw_int POS raw_int . [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
## raw_int -> raw_int . NEG raw_int [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
## raw_int -> raw_int . STAR raw_int [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
##
## The known suffix of the stack is as follows:
## raw_int POS raw_int
##

Ill-formed bitwidth expression: expected an integer operator, a ',' or ':', or a closing '}', ']', ')', or '>'.

toplevel: CONST ID COLON ID LANGLE RAW_INT NEG USE_BITFIELD
##
## Ends in an error in state: 39.
##
## raw_int -> raw_int NEG . raw_int [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
##
## The known suffix of the stack is as follows:
## raw_int NEG
##

Ill-formed bitwidth expression: expected an integer.

toplevel: CONST ID COLON ID LANGLE RAW_INT NEG RAW_INT USE_BITFIELD
##
## Ends in an error in state: 40.
##
## raw_int -> raw_int . POS raw_int [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
## raw_int -> raw_int . NEG raw_int [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
## raw_int -> raw_int NEG raw_int . [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
## raw_int -> raw_int . STAR raw_int [ STAR RRBRACK RPAREN RBRACE RANGLE POS NEG COMMA COLON ]
##
## The known suffix of the stack is as follows:
## raw_int NEG raw_int
##

Ill-formed bitwidth expression: expected an integer operator, a ',' or ':', or a closing '}', ']', ')', or '>'.

toplevel: CONST ID COLON LPAREN ID RANGLE
##
## Ends in an error in state: 41.
##
## type_expr -> LPAREN loption(separated_nonempty_list(COMMA,type_expr)) . RPAREN [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## LPAREN loption(separated_nonempty_list(COMMA,type_expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production option(type_args) ->
## In state 48, spurious reduction of production type_expr -> type_id option(type_args)
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,type_expr) -> type_expr
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,type_expr)) -> separated_nonempty_list(COMMA,type_expr)
##

Ill-formed type expression: expected a ',' or a closing ')'.

toplevel: CONST ID COLON ID LANGLE RAW_INT RRBRACK
##
## Ends in an error in state: 43.
##
## raw_int -> raw_int . POS raw_int [ STAR RANGLE POS NEG ]
## raw_int -> raw_int . NEG raw_int [ STAR RANGLE POS NEG ]
## raw_int -> raw_int . STAR raw_int [ STAR RANGLE POS NEG ]
## type_args -> LANGLE raw_int . RANGLE [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## LANGLE raw_int
##

Ill-formed bitwidth expression: expected an integer operator or a closing '>'.

toplevel: TYPE ID EQ BAR UID OF ID STAR USE_BITFIELD
##
## Ends in an error in state: 66.
##
## separated_nonempty_list(STAR,type_expr) -> type_expr STAR . separated_nonempty_list(STAR,type_expr) [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## type_expr STAR
##

Ill-formed type expression.

toplevel: RECFUN ID LANGLE USE_BITFIELD
##
## Ends in an error in state: 280.
##
## recfun_decl -> ident LANGLE . loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE
##

Invalid type variable.

toplevel: RECFUN ID LANGLE TVAR RPAREN
##
## Ends in an error in state: 281.
##
## recfun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) . RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 10, spurious reduction of production separated_nonempty_list(COMMA,TVAR) -> TVAR
## In state 13, spurious reduction of production loption(separated_nonempty_list(COMMA,TVAR)) -> separated_nonempty_list(COMMA,TVAR)
##

Ill-formed type parameters: expected a ',' or a closing '>'.

toplevel: RECFUN ID LANGLE RANGLE USE_BITFIELD
##
## Ends in an error in state: 282.
##
## recfun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE . LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE
##

Ill-formed function definition: expected an opening '('.

toplevel: RECFUN ID LANGLE RANGLE LPAREN USE_BITFIELD
##
## Ends in an error in state: 283.
##
## recfun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN . param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN
##

Invalid function parameter.

toplevel: RECFUN ID LANGLE RANGLE LPAREN RPAREN USE_BITFIELD
##
## Ends in an error in state: 285.
##
## recfun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN . ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN
##

Ill-formed function signature: expected an '->'.

toplevel: RECFUN ID LANGLE RANGLE LPAREN RPAREN ARROW USE_BITFIELD
##
## Ends in an error in state: 286.
##
## recfun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW . type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW
##

Ill-formed type expression as function result type.

toplevel: RECFUN ID LANGLE RANGLE LPAREN RPAREN ARROW ID TYPE
##
## Ends in an error in state: 287.
##
## recfun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr . EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production option(type_args) ->
## In state 48, spurious reduction of production type_expr -> type_id option(type_args)
##

Ill-formed function definition: expected a '='.

toplevel: RECFUN ID LANGLE RANGLE LPAREN RPAREN ARROW ID EQ USE_BITFIELD
##
## Ends in an error in state: 288.
##
## recfun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ . LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ
##

Ill-formed function body: expected an opening '{'.

toplevel: RECFUN ID LANGLE RANGLE LPAREN RPAREN ARROW ID EQ LBRACE USE_BITFIELD
##
## Ends in an error in state: 289.
##
## recfun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE . expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE
##

Ill-formed function body: expected an expression.

toplevel: RECFUN ID LANGLE RANGLE LPAREN RPAREN ARROW ID EQ LBRACE ID USE_BITFIELD
##
## Ends in an error in state: 290.
##
## expr -> expr . DOT ident [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## recfun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr . RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD AND ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
##

Ill-formed expression in function body.

toplevel: FUN ID LANGLE USE_BITFIELD
##
## Ends in an error in state: 323.
##
## fun_decl -> ident LANGLE . loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE
##

Ill-formed function declaration: expected a type variable.

toplevel: FUN ID LANGLE TVAR RPAREN
##
## Ends in an error in state: 324.
##
## fun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) . RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 10, spurious reduction of production separated_nonempty_list(COMMA,TVAR) -> TVAR
## In state 13, spurious reduction of production loption(separated_nonempty_list(COMMA,TVAR)) -> separated_nonempty_list(COMMA,TVAR)
##

Ill-formed function type parameter: expected a ',' or a closing '>'.

toplevel: FUN ID LANGLE RANGLE USE_BITFIELD
##
## Ends in an error in state: 325.
##
## fun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE . LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE
##

Ill-formed function definition: expected an opening '('.

toplevel: FUN ID LANGLE RANGLE LPAREN USE_BITFIELD
##
## Ends in an error in state: 326.
##
## fun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN . param_decls RPAREN ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN
##

Ill-formed function definition: expected a parameter declaration or a closing ')'.

toplevel: FUN ID LANGLE RANGLE LPAREN RPAREN USE_BITFIELD
##
## Ends in an error in state: 328.
##
## fun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN . ARROW type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN
##

Ill-formed function signature: expected an '->'.

toplevel: FUN ID LANGLE RANGLE LPAREN RPAREN ARROW USE_BITFIELD
##
## Ends in an error in state: 329.
##
## fun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW . type_expr EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW
##

Ill-formed type expression as function result type.

toplevel: FUN ID LANGLE RANGLE LPAREN RPAREN ARROW ID TYPE
##
## Ends in an error in state: 330.
##
## fun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr . EQ LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production option(type_args) ->
## In state 48, spurious reduction of production type_expr -> type_id option(type_args)
##

Ill-formed function definition: expected a '='.

toplevel: FUN ID LANGLE RANGLE LPAREN RPAREN ARROW ID EQ USE_BITFIELD
##
## Ends in an error in state: 331.
##
## fun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ . LBRACE expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ
##

Ill-formed function body: expected an opening '{'.

toplevel: FUN ID LANGLE RANGLE LPAREN RPAREN ARROW ID EQ LBRACE USE_BITFIELD
##
## Ends in an error in state: 332.
##
## fun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE . expr RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE
##

Ill-formed function body: expected an expression.

toplevel: FUN ID LANGLE RANGLE LPAREN RPAREN ARROW ID EQ LBRACE ID USE_BITFIELD
##
## Ends in an error in state: 333.
##
## expr -> expr . DOT ident [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RBRACE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## fun_decl -> ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr . RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## ident LANGLE loption(separated_nonempty_list(COMMA,TVAR)) RANGLE LPAREN param_decls RPAREN ARROW type_expr EQ LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
##

Ill-formed expression in function body.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE USE_BITFIELD
##
## Ends in an error in state: 377.
##
## nt_args -> LANGLE . loption(separated_nonempty_list(COMMA,nt_attr_val)) RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
## rule_elem -> UID LANGLE . raw_int RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## UID LANGLE
##

Ill-formed argument: expected a integer bitwidth expression or an inherited attribute value specifier.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE RAW_INT RRBRACK
##
## Ends in an error in state: 379.
##
## raw_int -> raw_int . POS raw_int [ STAR RANGLE POS NEG ]
## raw_int -> raw_int . NEG raw_int [ STAR RANGLE POS NEG ]
## raw_int -> raw_int . STAR raw_int [ STAR RANGLE POS NEG ]
## rule_elem -> UID LANGLE raw_int . RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## UID LANGLE raw_int
##

Ill-formed bitwidth expression: expected an integer operator or a closing '>'.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE ID LARROW LPAREN ID RPAREN USE_BITFIELD
##
## Ends in an error in state: 381.
##
## separated_nonempty_list(COMMA,nt_attr_val) -> nt_attr_val . [ RANGLE ]
## separated_nonempty_list(COMMA,nt_attr_val) -> nt_attr_val . COMMA separated_nonempty_list(COMMA,nt_attr_val) [ RANGLE ]
##
## The known suffix of the stack is as follows:
## nt_attr_val
##

Ill-formed inherited attribute specifier: expected a ',' or a closing '>'.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE ID EQ ID COMMA USE_BITFIELD
##
## Ends in an error in state: 382.
##
## separated_nonempty_list(COMMA,nt_attr_val) -> nt_attr_val COMMA . separated_nonempty_list(COMMA,nt_attr_val) [ RANGLE ]
##
## The known suffix of the stack is as follows:
## nt_attr_val COMMA
##

Invalid inherited attribute specifier: expected an identifier.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE ID USE_BITFIELD
##
## Ends in an error in state: 384.
##
## nt_attr_val -> ident . EQ expr [ RANGLE COMMA ]
## nt_attr_val -> ident . LARROW LPAREN expr RPAREN [ RANGLE COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Invalid inherited attribute value specifier: expected an '=' or a '<-'.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE ID LARROW USE_BITFIELD
##
## Ends in an error in state: 385.
##
## nt_attr_val -> ident LARROW . LPAREN expr RPAREN [ RANGLE COMMA ]
##
## The known suffix of the stack is as follows:
## ident LARROW
##

Ill-formed multi-assignment for inherited attribute: expected a '('.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE ID LARROW LPAREN USE_BITFIELD
##
## Ends in an error in state: 386.
##
## nt_attr_val -> ident LARROW LPAREN . expr RPAREN [ RANGLE COMMA ]
##
## The known suffix of the stack is as follows:
## ident LARROW LPAREN
##

Ill-formed multi-assignment for inherited attribute: expected an expression.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE ID LARROW LPAREN ID USE_BITFIELD
##
## Ends in an error in state: 387.
##
## expr -> expr . DOT ident [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## nt_attr_val -> ident LARROW LPAREN expr . RPAREN [ RANGLE COMMA ]
##
## The known suffix of the stack is as follows:
## ident LARROW LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
##

Invalid expression in multi-assignment of inherited attribute.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE ID EQ USE_BITFIELD
##
## Ends in an error in state: 389.
##
## nt_attr_val -> ident EQ . expr [ RANGLE COMMA ]
##
## The known suffix of the stack is as follows:
## ident EQ
##

Ill-formed inherited attribute value specifier: expected an expression.

toplevel: FORMAT LBRACE UID COLONEQ UID LANGLE ID EQ ID USE_BITFIELD
##
## Ends in an error in state: 390.
##
## expr -> expr . DOT ident [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RANGLE PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COMMA COLONCOLON BAR_B AT ASHFT AND_B ]
## nt_attr_val -> ident EQ expr . [ RANGLE COMMA ]
##
## The known suffix of the stack is as follows:
## ident EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
##

Invalid expression in inherited attribute value specifier.

toplevel: FORMAT LBRACE UID COLONEQ UID DOT UID LANGLE USE_BITFIELD
##
## Ends in an error in state: 395.
##
## nt_args -> LANGLE . loption(separated_nonempty_list(COMMA,nt_attr_val)) RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LANGLE
##

Invalid inherited attribute specifier for non-terminal.

toplevel: FORMAT LBRACE UID COLONEQ PAD LANGLE USE_BITFIELD
##
## Ends in an error in state: 448.
##
## rule_elem -> PAD LANGLE . raw_int COMMA BV_LITERAL RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## PAD LANGLE
##

Ill-formed padding specifier: expected an integer bitwidth.

toplevel: FORMAT LBRACE UID COLONEQ PAD LANGLE RAW_INT RRBRACK
##
## Ends in an error in state: 449.
##
## raw_int -> raw_int . POS raw_int [ STAR POS NEG COMMA ]
## raw_int -> raw_int . NEG raw_int [ STAR POS NEG COMMA ]
## raw_int -> raw_int . STAR raw_int [ STAR POS NEG COMMA ]
## rule_elem -> PAD LANGLE raw_int . COMMA BV_LITERAL RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## PAD LANGLE raw_int
##

Ill-formed padding specifier: expected an integer operator or a ','.

toplevel: FORMAT LBRACE UID COLONEQ PAD LANGLE RAW_INT COMMA USE_BITFIELD
##
## Ends in an error in state: 450.
##
## rule_elem -> PAD LANGLE raw_int COMMA . BV_LITERAL RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## PAD LANGLE raw_int COMMA
##

Ill-formed padding specifier: expected a literal bitvector value.

toplevel: FORMAT LBRACE UID COLONEQ PAD LANGLE RAW_INT COMMA BV_LITERAL USE_BITFIELD
##
## Ends in an error in state: 451.
##
## rule_elem -> PAD LANGLE raw_int COMMA BV_LITERAL . RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## PAD LANGLE raw_int COMMA BV_LITERAL
##

Ill-formed padding specifier: expected a closing '>'.

toplevel: FORMAT LBRACE UID COLONEQ ALIGN LANGLE USE_BITFIELD
##
## Ends in an error in state: 532.
##
## rule_elem -> ALIGN LANGLE . raw_int RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## ALIGN LANGLE
##

Ill-formed alignment specifier: expected an integer bitwidth.

toplevel: FORMAT LBRACE UID COLONEQ ALIGN LANGLE RAW_INT RRBRACK
##
## Ends in an error in state: 533.
##
## raw_int -> raw_int . POS raw_int [ STAR RANGLE POS NEG ]
## raw_int -> raw_int . NEG raw_int [ STAR RANGLE POS NEG ]
## raw_int -> raw_int . STAR raw_int [ STAR RANGLE POS NEG ]
## rule_elem -> ALIGN LANGLE raw_int . RANGLE [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## ALIGN LANGLE raw_int
##

Ill-formed alignment specifier: expected an integer operator or a closing '>'.

toplevel: CONST ID COLON ID EQ ID RSHFT USE_BITFIELD
##
## Ends in an error in state: 152.
##
## expr -> expr RSHFT . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr RSHFT
##

Ill-formed operator argument: expected an expression.

toplevel: CONST ID COLON ID EQ ID RSHFT BV_LITERAL UNDERSCORE
##
## Ends in an error in state: 153.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr RSHFT expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr RSHFT expr
##

Ill-formed expression.

toplevel: CONST ID COLON ID EQ ID LSHFT USE_BITFIELD
##
## Ends in an error in state: 192.
##
## expr -> expr LSHFT . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LSHFT
##

Ill-formed operator argument: expected an expression.

toplevel: CONST ID COLON ID EQ ID LSHFT BV_LITERAL UNDERSCORE
##
## Ends in an error in state: 193.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr LSHFT expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr LSHFT expr
##

Ill-formed expression.

toplevel: CONST ID COLON ID EQ ID ASHFT USE_BITFIELD
##
## Ends in an error in state: 196.
##
## expr -> expr ASHFT . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr ASHFT
##

Ill-formed operator argument: expected an expression.

toplevel: CONST ID COLON ID EQ ID ASHFT BV_LITERAL UNDERSCORE
##
## Ends in an error in state: 197.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr ASHFT expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr ASHFT expr
##

Ill-formed expression.

toplevel: CONST ID COLON ID EQ IB_NOT USE_BITFIELD
##
## Ends in an error in state: 139.
##
## expr -> IB_NOT . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## IB_NOT
##

Ill-formed operator argument: expected an expression.

toplevel: CONST ID COLON ID EQ ID IB_XOR USE_BITFIELD
##
## Ends in an error in state: 206.
##
## expr -> expr IB_XOR . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr IB_XOR
##

Ill-formed operator argument: expected an expression.

toplevel: CONST ID COLON ID EQ ID IB_XOR BV_LITERAL UNDERSCORE
##
## Ends in an error in state: 207.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr IB_XOR expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr IB_XOR expr
##

Ill-formed expression.

toplevel: CONST ID COLON ID EQ ID IB_OR USE_BITFIELD
##
## Ends in an error in state: 216.
##
## expr -> expr IB_OR . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr IB_OR
##

Ill-formed operator argument: expected an expression.

toplevel: CONST ID COLON ID EQ ID IB_OR BV_LITERAL UNDERSCORE
##
## Ends in an error in state: 217.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr IB_OR expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr IB_OR expr
##

Ill-formed expression.

toplevel: CONST ID COLON ID EQ ID IB_AND USE_BITFIELD
##
## Ends in an error in state: 218.
##
## expr -> expr IB_AND . expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr IB_AND
##

Ill-formed operator argument: expected an expression.

toplevel: CONST ID COLON ID EQ ID IB_AND BV_LITERAL UNDERSCORE
##
## Ends in an error in state: 219.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr IB_AND expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## expr IB_AND expr
##

Ill-formed expression.

toplevel: CONST ID COLON ID EQ IB_NOT BV_LITERAL UNDERSCORE
##
## Ends in an error in state: 226.
##
## expr -> expr . DOT ident [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LBRACK expr RBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LLBRACK raw_int RRBRACK [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> IB_NOT expr . [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LAND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . CONSTR_MATCH CONSTR [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS_S expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . BAR_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AND_B expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . PLUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . AT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MINUS expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MUL expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . MOD expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . DIV expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_AND expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_OR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . IB_XOR expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . RSHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . ASHFT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GT expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . GTEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . EQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . NEQ expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . COLONCOLON expr [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## IB_NOT expr
##

Ill-formed expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE PRINTT USE_BITFIELD
##
## Ends in an error in state: 464.
##
## stmt -> PRINTT . LPAREN expr RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## PRINTT
##

Ill-formed print statement: expected an opening '('.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE PRINTT LPAREN USE_BITFIELD
##
## Ends in an error in state: 465.
##
## stmt -> PRINTT LPAREN . expr RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## PRINTT LPAREN
##

Ill-formed print statement: expected an expression.

toplevel: FORMAT LBRACE UID COLONEQ LBRACE PRINTT LPAREN ID USE_BITFIELD
##
## Ends in an error in state: 466.
##
## expr -> expr . DOT ident [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## stmt -> PRINTT LPAREN expr . RPAREN [ SEMISEMI SEMICOLON RPAREN RBRACE BAR ]
##
## The known suffix of the stack is as follows:
## PRINTT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
##

Ill-formed expression in print statement: perhaps you forgot a ')'?

toplevel: CONST ID COLON UID DOT USE_BITFIELD
##
## Ends in an error in state: 18.
##
## type_id -> UID DOT . ident [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE LANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## UID DOT
##

Invalid type: expected an identifier.

toplevel: CONST ID COLON ID LANGLE ID RPAREN
##
## Ends in an error in state: 45.
##
## type_args -> LANGLE loption(separated_nonempty_list(COMMA,type_expr)) . RANGLE [ TYPE STAR SEMICOLON RPAREN RECFUN RBRACK RBRACE RANGLE INCLUDE IMPORT FUN FORMAT FOREIGN EQ EOF CONST COMMA COLONEQ BITFIELD BAR AND ]
##
## The known suffix of the stack is as follows:
## LANGLE loption(separated_nonempty_list(COMMA,type_expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production option(type_args) ->
## In state 48, spurious reduction of production type_expr -> type_id option(type_args)
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,type_expr) -> type_expr
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,type_expr)) -> separated_nonempty_list(COMMA,type_expr)
##

Ill-formed type argument: perhaps you forgot a '>'?

toplevel: FOREIGN USE_BITFIELD
##
## Ends in an error in state: 602.
##
## pre_decl -> FOREIGN . LBRACE separated_nonempty_list(SEMICOLON,ffifun) RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## FOREIGN
##

Ill-formed foreign declaration: expected a '{'.

toplevel: FOREIGN LBRACE USE_BITFIELD
##
## Ends in an error in state: 603.
##
## pre_decl -> FOREIGN LBRACE . separated_nonempty_list(SEMICOLON,ffifun) RBRACE [ TYPE RECFUN INCLUDE IMPORT FUN FORMAT FOREIGN EOF CONST BITFIELD ]
##
## The known suffix of the stack is as follows:
## FOREIGN LBRACE
##

Ill-formed foreign function declaration: expected a foreign function signature.

toplevel: FOREIGN LBRACE LBRACE USE_BITFIELD
##
## Ends in an error in state: 604.
##
## ffifun -> LBRACE . separated_nonempty_list(COMMA,ffispec) RBRACE ident LPAREN param_decls RPAREN ARROW type_expr [ SEMICOLON RBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

Ill-formed foreign binding specification: expected a sequence of '<lang>=<identifier>' specifiers.

toplevel: FOREIGN LBRACE LBRACE ID USE_BITFIELD
##
## Ends in an error in state: 613.
##
## ffispec -> ident . EQ LITERAL [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident
##

Ill-formed foreign function language binding: expected an '='.

toplevel: FOREIGN LBRACE LBRACE ID EQ USE_BITFIELD
##
## Ends in an error in state: 614.
##
## ffispec -> ident EQ . LITERAL [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ident EQ
##

Ill-formed foreign function language binding: expected a literal.

toplevel: FOREIGN LBRACE LBRACE ID EQ LITERAL RBRACE USE_BITFIELD
##
## Ends in an error in state: 606.
##
## ffifun -> LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE . ident LPAREN param_decls RPAREN ARROW type_expr [ SEMICOLON RBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE
##

Ill-formed foreign function declaration: expected an identifier.

toplevel: FOREIGN LBRACE LBRACE ID EQ LITERAL RBRACE ID USE_BITFIELD
##
## Ends in an error in state: 607.
##
## ffifun -> LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE ident . LPAREN param_decls RPAREN ARROW type_expr [ SEMICOLON RBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE ident
##

Ill-formed foreign function signature: expected an opening '('.

toplevel: FOREIGN LBRACE LBRACE ID EQ LITERAL RBRACE ID LPAREN USE_BITFIELD
##
## Ends in an error in state: 608.
##
## ffifun -> LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE ident LPAREN . param_decls RPAREN ARROW type_expr [ SEMICOLON RBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE ident LPAREN
##

Ill-formed foreign function signature: expected a parameter declaration.

toplevel: FOREIGN LBRACE LBRACE ID EQ LITERAL RBRACE ID LPAREN RPAREN USE_BITFIELD
##
## Ends in an error in state: 610.
##
## ffifun -> LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE ident LPAREN param_decls RPAREN . ARROW type_expr [ SEMICOLON RBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE ident LPAREN param_decls RPAREN
##

Ill-formed foreign function signature: expected a '->'.

toplevel: FOREIGN LBRACE LBRACE ID EQ LITERAL RBRACE ID LPAREN RPAREN ARROW USE_BITFIELD
##
## Ends in an error in state: 611.
##
## ffifun -> LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE ident LPAREN param_decls RPAREN ARROW . type_expr [ SEMICOLON RBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE separated_nonempty_list(COMMA,ffispec) RBRACE ident LPAREN param_decls RPAREN ARROW
##

Ill-formed foreign function signature: expected a type expression for the return type.

toplevel: FOREIGN LBRACE LBRACE ID EQ LITERAL USE_BITFIELD
##
## Ends in an error in state: 616.
##
## separated_nonempty_list(COMMA,ffispec) -> ffispec . [ RBRACE ]
## separated_nonempty_list(COMMA,ffispec) -> ffispec . COMMA separated_nonempty_list(COMMA,ffispec) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## ffispec
##

Ill-formed foreign function language binding: expected a ',' or a closing '}'.

toplevel: FOREIGN LBRACE LBRACE ID EQ LITERAL COMMA USE_BITFIELD
##
## Ends in an error in state: 617.
##
## separated_nonempty_list(COMMA,ffispec) -> ffispec COMMA . separated_nonempty_list(COMMA,ffispec) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## ffispec COMMA
##

Ill-formed foreign function language binding: expected a language specification.

toplevel: FOREIGN LBRACE LBRACE ID EQ LITERAL RBRACE ID LPAREN RPAREN ARROW TVAR USE_BITFIELD
##
## Ends in an error in state: 621.
##
## separated_nonempty_list(SEMICOLON,ffifun) -> ffifun . [ RBRACE ]
## separated_nonempty_list(SEMICOLON,ffifun) -> ffifun . SEMICOLON separated_nonempty_list(SEMICOLON,ffifun) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## ffifun
##

Ill-formed foreign function declaration: expected a ';' or a closing '}'.

toplevel: FOREIGN LBRACE LBRACE ID EQ LITERAL RBRACE ID LPAREN RPAREN ARROW ID SEMICOLON USE_BITFIELD
##
## Ends in an error in state: 622.
##
## separated_nonempty_list(SEMICOLON,ffifun) -> ffifun SEMICOLON . separated_nonempty_list(SEMICOLON,ffifun) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## ffifun SEMICOLON
##

Ill-formed foreign function declaration: expected an opening '{' for language bindings.

toplevel: FORMAT LBRACE UID COLONEQ LSRCO USE_BITFIELD
##
## Ends in an error in state: 453.
##
## rule_elem -> LSRCO . ident LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RSRCO [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LSRCO
##

Ill-formed constraint: expected an identifier naming a constraint type.

toplevel: FORMAT LBRACE UID COLONEQ LSRCO ID USE_BITFIELD
##
## Ends in an error in state: 454.
##
## rule_elem -> LSRCO ident . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RSRCO [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LSRCO ident
##

Ill-formed constraint: expected an opening '('.

toplevel: FORMAT LBRACE UID COLONEQ LSRCO ID LPAREN USE_BITFIELD
##
## Ends in an error in state: 455.
##
## rule_elem -> LSRCO ident LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN RSRCO [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LSRCO ident LPAREN
##

Ill-formed constraint: expected an expression.

toplevel: FORMAT LBRACE UID COLONEQ LSRCO ID LPAREN RPAREN USE_BITFIELD
##
## Ends in an error in state: 457.
##
## rule_elem -> LSRCO ident LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . RSRCO [ USE_BITFIELD UID SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RPAREN RBRACK RBRACE QUESTION POS PAD LSRCO LPAREN LBRACK LBRACE ID EXCLAIM EPSILON CARET BAR AT_VIEW AT_POS AT_MAP ALIGN ]
##
## The known suffix of the stack is as follows:
## LSRCO ident LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

Ill-formed constraint: expected a closing ']%'.

toplevel: CONST ID COLON ID EQ PRINTT USE_BITFIELD
##
## Ends in an error in state: 102.
##
## expr -> PRINTT . LPAREN expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## PRINTT
##

Ill-formed expression: expected an opening '('.

toplevel: CONST ID COLON ID EQ PRINTT LPAREN USE_BITFIELD
##
## Ends in an error in state: 103.
##
## expr -> PRINTT LPAREN . expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## PRINTT LPAREN
##

Ill-formed print expression: expected an expression.

toplevel: CONST ID COLON ID EQ PRINT USE_BITFIELD
##
## Ends in an error in state: 104.
##
## expr -> PRINT . LPAREN expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## PRINT
##

Ill-formed expression: expected an opening '('.

toplevel: CONST ID COLON ID EQ PRINT LPAREN USE_BITFIELD
##
## Ends in an error in state: 105.
##
## expr -> PRINT LPAREN . expr RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN
##

Ill-formed print expression: expected an expression as argument.

toplevel: CONST ID COLON ID EQ PRINT LPAREN ID USE_BITFIELD
##
## Ends in an error in state: 266.
##
## expr -> expr . DOT ident [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> PRINT LPAREN expr . RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
##

Ill-formed print expression: expected an expression as argument.

toplevel: CONST ID COLON ID EQ PRINTT LPAREN ID USE_BITFIELD
##
## Ends in an error in state: 268.
##
## expr -> expr . DOT ident [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DOT LPAREN UID DOT ident RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> PRINTT LPAREN expr . RPAREN [ USE_BITFIELD UID TYPE SYN_END SYN_BEGIN STAR SLASH_SF_LBRACK SLASH_SB_LBRACK SET_VIEW SEMISEMI SEMICOLON RSHFT RPAREN RPARBAR RECFUN RBRACK RBRACE RANGLE QUESTION POS PLUS_S PLUS PAD OF NEQ MUL MOD MINUS LTEQ LT LSRCO LSHFT LPAREN LOR LLBRACK LBRACK LBRACE LAND INCLUDE IN IMPORT ID IB_XOR IB_OR IB_AND HASH GTEQ GT FUN FORMAT FOREIGN EXCLAIM EQ EPSILON EOF DOT DIV CONSTR_MATCH CONST COMMA COLONCOLON COLON CARET BITFIELD BAR_B BAR AT_VIEW AT_POS AT_MAP AT ASHFT AND_B ALIGN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LBRACK expr RBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int COLON raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LLBRACK raw_int RRBRACK [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LAND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . CONSTR_MATCH CONSTR [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS_S expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . BAR_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AND_B expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . PLUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . AT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MINUS expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MUL expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . MOD expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . DIV expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_AND expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_OR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . IB_XOR expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . RSHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . ASHFT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GT expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . LTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . GTEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . EQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . NEQ expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
## expr -> expr . COLONCOLON expr [ RSHFT RPAREN PLUS_S PLUS NEQ MUL MOD MINUS LTEQ LT LSHFT LPAREN LOR LLBRACK LBRACK LAND IB_XOR IB_OR IB_AND GTEQ GT EQ DOT DIV CONSTR_MATCH COLONCOLON BAR_B AT ASHFT AND_B ]
##
## The known suffix of the stack is as follows:
## PRINTT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 147, spurious reduction of production expr -> ident
##

Ill-formed print expression: expected an expression as argument.
