(ocamllex
 (modules lexer)
)

(menhir
 (modules parser)
 (flags --unused-tokens --explain --dump --table)
)

(library
  (name parsing)
  (libraries menhirLib)
)

;; -----------------------------------------------------------------------------
;; This section deals with the .messages file.

;; The module [ParseErrorMessages] is generated by Menhir from the
;; file "parseErrorMessages.messages".  The error messages in this
;; file are first checked for completeness via the dependency on
;; parseErrorMessages.check.

(rule
 (deps parseErrorMessages.check)
 (action (with-stdout-to parseErrorMessages.ml
                         (run menhir
                              %{dep:parser.mly}
                              --compile-errors %{dep:parseErrorMessages.messages}
                         )
 ))
)

;; The completeness check needs a file that contains a list of all
;; current error states.  This file is generated by this rule into
;; "parseErrorMessages.auto.messages".

(rule
 (with-stdout-to parseErrorMessages.auto.messages
                 (run menhir
                      %{dep:parser.mly}
                      --list-errors
                 )
 )
)

;; The completeness check verifies that all the current errors states
;; are included in the ".messages" file.  This is done by comparing
;; the ".messages" file with that generated by Menhir using the above
;; rule.

(rule
 (with-stdout-to parseErrorMessages.check
                 (run menhir
                      %{dep:parser.mly}
                      --compare-errors %{dep:parseErrorMessages.auto.messages}
                      --compare-errors %{dep:parseErrorMessages.messages}
                 )
 )
)

;; The following rule should be used after any modification to the
;; grammar in [parser.mly]; it runs via a [make update].

;; This rule updates the file [parseErrorMessages.messages] with new error
;; states (if necessary) and with new auto-generated comments for all
;; error states.

(rule
 (with-stdout-to parseErrorMessages.messages.updated
                 (run menhir
                      --update-errors %{dep:parseErrorMessages.messages}
                      %{dep:parser.mly}
                      )
                 )
 )
