type ppbm_fc = {
  magic_bytes: [byte],
  height: int,
  width: int,
  img: [byte]
}

format {
  Comment := !"#"! (# [AsciiCharS \ "\n" \ "\r"]*  ["\r" | "\n"] #);;
  Whitespace := (# [" " | "\t" | "\r" | "\n"] #);;  // missing VT, FF (vertical tabulation, form feed)
  NonNewlineWhitespace := (# [" " | "\t"] #);;
  DimensionValue := (#[DigitS]+#);;
  BinaryDigit := (# ["0" | "1"] #);;
  PixelPlusWhitespace := (# BinaryDigit Whitespace* #);;
  TokenSeparator := (# (Comment | Whitespace)* Whitespace+ (Comment | Whitespace)* #);;
  TokenSeparatorRaster := (# Comment* Whitespace #);;
  MagicBytes := !"P1"!;;
  Junk := ; (# Whitespace AsciiCharS* #);;

  PBM_FC fc {ppbm_fc} :=
    magic_bytes = MagicBytes
    TokenSeparator
    height = DimensionValue 
    [Int.of_bytes(height) ~~ option::Some]
    TokenSeparator
    width = DimensionValue
    [Int.of_bytes(width) ~~ option::Some]
    raster_size = {
      ;;
      Int.of_bytes_unsafe(width) * Int.of_bytes_unsafe(height)
    }
    TokenSeparatorRaster
    img = (PixelPlusWhitespace^raster_size)
    junk = Junk
    {
      fc.magic_bytes := magic_bytes;
      fc.height := Int.of_bytes_unsafe(height);
      fc.width := Int.of_bytes_unsafe(width);
      fc.img := List.flatten(img)
    }
}
