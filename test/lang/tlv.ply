type tlv =
 | TTL  of u32
 | Port of u32
 | Unknown of byte * [byte]

fun ttl_to_int(b : [byte]) -> u32 = {
  U32.of_byte(List.index_unsafe(b, 0u))
}

fun port_to_int(b : [byte]) -> u32 = {
  (256u32 *_u32 U32.of_byte(List.index_unsafe(b, 1u)))
  +_u32 U32.of_byte(List.index_unsafe(b, 0u))
}

format {
  // Example of a tagged-length-value (TLV), another common dependent type:
  TLV t { val: tlv } :=
    tag=Byte len=Byte v=(Byte ^ Usize.of_byte(len))

    ( ([Isize.of_byte(tag) = 1i && Usize.of_byte(len) >_u 1u] { t.val := tlv::TTL(ttl_to_int(v))   })
    | ([Isize.of_byte(tag) = 2i && Usize.of_byte(len) >_u 0u] { t.val := tlv::Port(port_to_int(v)) })
    | (                                                       { t.val := tlv::Unknown(tag, v)      })
    )
}
