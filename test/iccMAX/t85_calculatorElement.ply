// this file corresponds to Table 85 of the iccMAX specification
// also see Table 24

type position_number = {
  offset: int,
  size: int
}

type cee_type = {
  p: int,
  q: int,
  e: int,
  main_function_position: position_number,
  subelement_positions: [position_number]
}

format {
  CalculatorElementEncoding cee {cee_type} :=
    !"calc"!
    !"\x00\x00\x00\x00"!
    p = UInt16<endian=endian::Big()>
    q = UInt16<endian=endian::Big()>
    e = UInt32<endian=endian::Big()>
    position_number = PositionNumber
    subelement_positions = (PositionNumber^e)
    { 
      cee.p := p;
      cee.q := q;
      cee.e := e;
      cee.main_function_position := position_number;
      cee.subelement_positions := subelement_positions
    }

    // to do: sub-element positions
    // to do: data for calculator element
    ;;


    PositionNumber pn {position_number} :=
      position_number_offset = UInt32<endian=endian::Big()>
      position_number_size = UInt32<endian=endian::Big()>      
      {
        pn.offset := position_number_offset;
        pn.size := position_number_size
      }
}
